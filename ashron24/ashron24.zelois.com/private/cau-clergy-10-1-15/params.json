{"name":"Cau-clergy","tagline":"Draft multilayer Leaflet map with clergy, cbo, and demographic layers","body":"<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <title>\r\n            CAU Clergy Map | DRAFT | update:10/05/15\r\n        </title>\r\n \r\n        <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\r\n        <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" />\r\n \r\n        <link rel=\"shortcut icon\" href=\"http://cartodb.com/assets/favicon.ico\" />\r\n\r\n       <!-- <link href='https://fonts.googleapis.com/css?family=Work+Sans:400,900' rel='stylesheet' type='text/css'> -->\r\n            <!-- <link rel=\"stylesheet\" href=\"//cdn.leafletjs.com/leaflet-0.7/leaflet.css\"/> -->\r\n            <!--<link rel=\"stylesheet\" href=\"../cau-clergy/css/leaflet.groupedlayercontrol.css\" /> -->\r\n\r\n        <link rel=\"stylesheet\" href=\"http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.css\" type=\"text/css\" /> \r\n        <link rel=\"stylesheet\" href=\"../cau-clergy-10-1-15/css/styledLayerControl.css\" /> \r\n        <link rel=\"stylesheet\" href=\"../cau-clergy/css/instructorStyles.css\" /> \r\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\">\r\n\r\n    <!-- <script src=\"//cdn.leafletjs.com/leaflet-0.7/leaflet.js\"></script> -->\r\n   <!-- <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js\"></script> -->\r\n   <!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script> -->\r\n\r\n  <style type=\"text/css\">\r\n            html, body, #map {\r\n                height: 100%;\r\n                padding: 0;\r\n                margin: 0;\r\n            }\r\n\r\n/* style and position the legend  */\r\n    #my-legend {  /* the container? */\r\n        position: absolute;\r\n        width: auto;\r\n        padding: 10px;\r\n        float: left;\r\n        bottom: 30px;\r\n        right: 10px;\r\n      }\r\n\r\n\r\n      .my-legend { \r\n        background: rgba(255,255,255,1); \r\n        background: transparent url(css/images/bgnoise_lg.jpg) repeat top left; \r\n        border-radius: 5px;\r\n        border: 0;\r\n        box-shadow: 0 0 8px rgba(0, 0, 0, 0.9);       \r\n        font-family: 'Ubuntu-Regular', Arial, sans-serif;\r\n        font-size: 18px;\r\n        text-shadow: 1px 1px 1px rgba(255,255,255,0.8);\r\n        padding: 5px 5px 5px 5px;  /* top, right, bottom, left  */\r\n        max-height: 200px;\r\n        max-width: 320px;\r\n        overflow-x: hidden;\r\n        overflow-y: scroll;\r\n      }\r\n            \r\n      .my-legend .legend-title {\r\n        font-family: 'Ubuntu-Regular', Arial, sans-serif;\r\n        /*margin-bottom: 5px;*/\r\n        padding-bottom: 5px;\r\n        font-weight: bold;\r\n        font-size: 155%;\r\n        }\r\n\r\n      .my-legend .layer-title {\r\n       font-family: 'BebasNeueRegular', 'Arial Narrow', Arial, sans-serif;    \r\n        text-align: left;\r\n        padding-bottom: 1px;\r\n        padding-top: 9px;\r\n        font-weight: bold;\r\n        font-size: 105%;\r\n        }  \r\n      .my-legend .legend-scale ul {\r\n        margin: 0;\r\n        padding: 0;\r\n        float: left; \r\n        list-style: none;\r\n        } \r\n      .my-legend .legend-scale ul li {  /* color span and text block area - the li*/\r\n        display: block;\r\n        padding-bottom: 5px;\r\n        float: left;\r\n        width: 40px;\r\n        font-size: 60%;\r\n        text-shadow: none;\r\n        list-style: none;\r\n        }\r\n\r\n    /* rotate legend labels*/\r\n      .rotate-text{\r\n        transform: rotate(-50deg);\r\n        transform-origin: left top 5;\r\n      }\r\n      .rotate-text{\r\n        float: left;\r\n        text-align: center;\r\n        padding: 18px 0px 8px 1px;\r\n        font-weight: 600;\r\n      }\r\n\r\n      .my-legend ul.legend-labels li span {\r\n        display: block;\r\n        float: left;\r\n        height: 20px;  /* height & width of the span blocks in pixels */\r\n        width: 40px;\r\n        }\r\n      .my-legend .legend-source {\r\n        font-size: 55%;\r\n        font-style: italic;\r\n        text-align: right;\r\n        color: #999;\r\n        clear: both;\r\n        margin-bottom: 3px;\r\n        }\r\n      .my-legend a {\r\n        color: #2b8cbe;\r\n        } \r\n\r\n\r\n        /* vertical legend style for DOE data*/\r\n          .my-legend .legend-scale-2 ul {\r\n              margin: 0;\r\n              margin-bottom: 0;\r\n              padding: 0;\r\n              float: left;\r\n              list-style: none;\r\n              }\r\n          .my-legend .legend-scale-2 ul li {\r\n              font-size: 70%;\r\n              list-style: none;\r\n              text-shadow: none;\r\n              margin-left: 0px;\r\n              margin-right: 1px;\r\n              line-height: 15px;\r\n              margin-bottom: 1px;\r\n              }\r\n          .my-legend ul.legend-labels-2 li span {\r\n              display: block;\r\n              float: left;\r\n              height: 15px;\r\n              width: 18px;\r\n              margin-right: 2px;\r\n              margin-left: 2px;\r\n              border: 0px solid #fff;\r\n              }\r\n\r\n\r\n/* change the appearance of the leaflet zoom control, copied from http://wcfcourier.com/app/special/fatalcrashes/css/styles.css */\r\n      .leaflet-control-zoom a {\r\n          background-color: #C5E1EB;\r\n          color: #000;  \r\n          text-decoration: none;\r\n      }\r\n\r\n      .leaflet-bar a:hover {\r\n          background-color: #000;\r\n      }\r\n\r\n      .leaflet-control-zoom a:hover {\r\n          background-color: #000;\r\n          color: #CCC;\r\n          text-decoration: none;\r\n      }\r\n\r\n      .leaflet-control-zoom a.leaflet-disabled {\r\n          background-color: #999;\r\n        color: #BBB;\r\n      }\r\n\r\n      .leaflet-control-zoom a.leaflet-disabled:hover {\r\n          color: #BBB;\r\n      }\r\n\r\n\r\n      </style>  \r\n    </head>\r\n\r\n    <body>\r\n        <div id=\"map\"></div>\r\n\r\n<!-- code for \"instructions\" (legend) from  http://wcfcourier.com/app/special/fatalcrashes/ -->\r\n<div id=\"hide_show_instructor\">\r\n    <div class=\"show_instructor\" >\r\n      <div class=\"icon-sort-up\"></div> <i class=\"fa fa-chevron-up\"></i>\r\n      <div class=\"hide_show_instructor_text\">instructions</div>\r\n    </div>\r\n    <div class=\"hide_instructor\" style=\"display: none;\"> \r\n      <div class=\"icon-sort-down\"></div> <i class=\"fa fa-chevron-down\"></i>\r\n      <div class=\"hide_show_instructor_text\">Hide</div> \r\n    </div>\r\n  </div>\r\n\r\n    <div id=\"instructor\" class=\"box-shadow\">\r\n      <h1>CAU Outreach Map</h1>\r\n\r\n      <div id=\"instructor-text-intro\">\r\n        <p>Layers are drawn as you select them, newest on top of oldest. To change the order, simply toggle a layer off and then on again to make it appear on top of others.</p>\r\n      </div>\r\n   </div>\r\n\r\n\r\n<!--   MAPBOX-style LEGEND  - framwork from SCHLANG map -->\r\n\r\n<div id='my-legend' class='my-legend'>\r\n\r\n<!-- <div class='legend-title'></div>\r\n<hr style=\"background:#000; border:0; height:2px\" /> -->\r\n<div class='layer-title'>Demographic Layers</div>\r\n<div class='legend-scale'>\r\n  <ul class='legend-labels'>\r\n    <li><span style='background:#FFFFB2;'></span><span class=\"rotate-text\">10-19%</span></li>  \r\n    <li><span style='background:#FED976;'></span><span class=\"rotate-text\">20-34%</span></li>\r\n    <li><span style='background:#FEB24C;'></span><span class=\"rotate-text\">35-49%</span></li>\r\n    <li><span style='background:#FD8D3C;'></span><span class=\"rotate-text\">50-64%</span></li>\r\n    <li><span style='background:#FC4E2A;'></span><span class=\"rotate-text\">65-79%</span></li>\r\n    <li><span style='background:#E31A1C;'></span><span class=\"rotate-text\">80-89%</span></li>\r\n    <li><span style='background:#B10026;'></span><span class=\"rotate-text\">90+ %</span></li>\r\n  </ul>\r\n\r\n</div>\r\n<div class='legend-source'><!--Source: 2014(?) <a href=\"https://www.census.gov/programs-surveys/acs/\">American Community Survey</a>--></div>\r\n\r\n<hr style=\"background:#c0c0c0; border:0; height:2px\" />\r\n\r\n  <div class='layer-title'>Median HH Income</div>\r\n  <div class='legend-scale'>\r\n    <ul class='legend-labels'>\r\n      <li><span style='background:#d73027;'></span><span class=\"rotate-text\">$30,000</li>\r\n      <li><span style='background:#f79272;'></span><span class=\"rotate-text\">$39,000</li>\r\n      <li><span style='background:#fed6b0;'></span><span class=\"rotate-text\">$48,000</li>\r\n      <li><span style='background:#fff2cc;'></span><span class=\"rotate-text\">$57,000</li>\r\n      <li><span style='background:#d2ecb4;'></span><span class=\"rotate-text\">$67,000</li>\r\n      <li><span style='background:#8cce8a;'></span><span class=\"rotate-text\">$84,000</li>\r\n      <li><span style='background:#1a9850;'></span><span class=\"rotate-text\">$244,000</li>\r\n    </ul>\r\n  </div>\r\n     <div class='legend-source'>Source: 2014 ACS? </div> \r\n\r\n<hr style=\"background:#c0c0c0; border:0; height:2px\" />\r\n\r\n  <div class='layer-title'>Median Income to Rent</div>\r\n  <div class='legend-scale'>\r\n    <ul class='legend-labels'>\r\n      <li><span style='background:#0080ff;'></span><span class=\"rotate-text\"> 22-25% </li>\r\n     <li><span style='background:#40a0ff;'></span><span class=\"rotate-text\"> 26-31% </li>      \r\n      <li><span style='background:#7fbfff;'></span><span class=\"rotate-text\"> 31-35% </li>\r\n      <li><span style='background:#fff2cc;'></span><span class=\"rotate-text\"> 36-40% </li>\r\n      <li><span style='background:#ffa6a6;'></span><span class=\"rotate-text\"> 40-44% </li>\r\n      <li><span style='background:#ff7a7a;'></span><span class=\"rotate-text\"> 45-50% </li>\r\n      <li><span style='background:#ff4d4d;'></span><span class=\"rotate-text\"> 50+ % </li>\r\n    </ul>\r\n  </div>\r\n     <div class='legend-source'>Source: ?? </div> \r\n\r\n<hr style=\"background:#c0c0c0; border:0; height:2px\" />\r\n\r\n    <div class='layer-title'>DOE Language Groups </div>\r\n        <div class='legend-scale-2'>\r\n          <ul class='legend-labels-2'>\r\n            <li><span style='background:#ff0000;'></span>Sino-Tibetan: Chinese</li>\r\n            <li><span style='background:#ffa500;'></span>South Asian</li>\r\n            <li><span style='background:#fb9a99;'></span>Other E & SE Asian</li>\r\n            <li><span style='background:#49db40;'></span>Afro-Asiatic: Semitic</li>\r\n            <li><span style='background:#229A00;'></span>Niger-Congo: Mande</li>\r\n            <li><span style='background:#136400;'></span>Niger-Congo: Atlantic-Congo</li>\r\n            <li><span style='background:#A53ED5;'></span>French Creoles</li>\r\n            <li><span style='background:#0000a0;'></span>Indo-Eur: Balto-Slavic</li>\r\n            <li><span style='background:#5CA2D1;'></span>Indo-Eur: Romance & Germanic</li>\r\n            <li><span style='background:#00ceff;'></span>Uralic & Other European</li>\r\n            <li><span style='background:#DDDDDD;'></span>English & other</li>\r\n          </ul>\r\n        </div>\r\n        <div class='legend-source'>Source: NYC Dept of Ed.</div> \r\n  </div> \r\n<!-- load infowindow template -->\r\n<script type=\"infowindow/html\" id=\"infowindow_template\">\r\n      <span> custom </span>\r\n      <div class=\"cartodb-popup\">\r\n        <a href=\"#close\" class=\"cartodb-popup-close-button close\">x</a>\r\n         <div class=\"cartodb-popup-content-wrapper\">\r\n           <div class=\"cartodb-popup-content\">\r\n           <h4 style=\"position:absolute; top:12px; left:19px; right:21px; display:block; width:auto; padding:8px; text-align:center; color:white; background:rgba(0,0,0,0.7)\"> {{content.data.name}}</h4>\r\n             /* content.data contains the field info */\r\n            \r\n           </div>\r\n         </div>\r\n         <div class=\"cartodb-popup-tip-container\"></div>\r\n      </div>\r\n    </script>\r\n        <!-- include cartodb.js library -->\r\n        <script src=\"http://libs.cartocdn.com/cartodb.js/v3/3.15/cartodb.js\" type=\"text/javascript\"></script>\r\n        <script src=\"../cau-clergy-10-1-15/src/styledLayerControl.js\"></script>\r\n        <!-- <script src=\"../cau-clergy/src/leaflet.groupedlayercontrol.js\"></script> -->\r\n\r\n \r\n        <!--[if lte IE 8]>\r\n        <link rel=\"stylesheet\" href=\"http://libs.cartocdn.com/cartodb.js/v2/themes/css/cartodb.ie.css\" />\r\n        <![endif]-->\r\n \r\n \r\n <script>\r\n// Toggle for show, hide instructions\r\n// Only visible on desktop\r\nisHideButton = false;\r\n$('#hide_show_instructor').click(function() {\r\n  // console.log(isHideButton);\r\n  if (isHideButton === true) {\r\n    $('.hide_instructor').hide();\r\n    $('.show_instructor').show();\r\n    $('#instructor').slideUp();\r\n    $('#hide_show_instructor').addClass('box-shadow');\r\n    $('.hide_show_instructor').show();\r\n    isHideButton = false;\r\n  } else {\r\n    $('.show_instructor').hide();\r\n    $('.hide_instructor').show();\r\n    $('#instructor').slideDown();\r\n    $('#hide_show_instructor').removeClass('box-shadow');\r\n    $('.hide_show_instructor').show();\r\n    isHideButton = true;\r\n  }\r\n});\r\n</script> \r\n\r\n        <script type=\"text/javascript\">\r\n            window.onload = function () {\r\n\r\n              //load up basemaps, store in var objects\r\n              var light_nolabels = L.tileLayer('http://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png', {attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'});\r\n\r\n              var Esri_WorldImagery = L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {attribution: 'Tiles &copy; Esri &mdash; Source: Esri et. al.'});\r\n\r\n              var OpenStreetMap_Mapnik = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {maxZoom: 19, attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'});\r\n\r\n              var Stamen_TerrainBackground = L.tileLayer('http://stamen-tiles-{s}.a.ssl.fastly.net/terrain-background/{z}/{x}/{y}.png', {\r\n                attribution: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',  subdomains: 'abcd',  minZoom: 4,  maxZoom: 18,  ext: 'png',  bounds: [[22, -132], [70, -56]] });\r\n\r\n              var black_wallpaper = L.tileLayer('http://www.colourlovers.com/wallPaper/1200x800/n/2875/COLOURlovers.com-Gothic_Wallpaper.png', { attribution: '&copy; <a href=\"http://www.colourlovers.com/lover/candycrack/loveNote\">CandyCrack</a> contributors'});\r\n\r\n              var Acetate_terrain = L.tileLayer('http://a{s}.acetate.geoiq.com/tiles/terrain/{z}/{x}/{y}.png', {\r\n                    attribution: '&copy;2012 Esri & Stamen, Data from OSM and Natural Earth',\r\n                    subdomains: '0123',\r\n                    minZoom: 2,\r\n                    maxZoom: 18\r\n                  });\r\n\r\n              var MapQuestOpen_OSM = L.tileLayer('http://otile{s}.mqcdn.com/tiles/1.0.0/{type}/{z}/{x}/{y}.{ext}', {\r\n                type: 'map',\r\n                ext: 'jpg',\r\n                attribution: 'Tiles Courtesy of <a href=\"http://www.mapquest.com/\">MapQuest</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n                subdomains: '1234'\r\n              });\r\n\r\n                // Instantiate new map object, place it in 'map' element\r\n              var map_object = new L.Map('map', {\r\n                    center: [40.7033,-73.9796], // New York, NY\r\n                    zoomControl: false,   // remove default zoomControl position to create a custom one\r\n                    zoom: 11,\r\n                    maxZoom: 16,\r\n                    minZoom: 10, \r\n                    layers:[light_nolabels]    // initial basemap \r\n                    //scrollWheelZoom: false   // to keep from zooming accidentally\r\n              });\r\n\r\n              map_object.addControl( L.control.zoom({position: 'topright'}) );      //add custom zoom controller and position         \r\n\r\n\r\n// FROM: javisantana’s block #8313604 -- January 8, 2014 -- http://bl.ocks.org/javisantana/8313604\r\n              var polygons = {};\r\n\r\n        function geometryHover(username, map, layer, options) {\r\n          options = options || {}\r\n          var HIGHLIGHT_STYLE = {\r\n            weight: 3,\r\n            color: '#FF0',\r\n            opacity: 1,\r\n            fillColor: '#FF0',\r\n            fillOpacity: 0.3\r\n          };\r\n          style = options.style || HIGHLIGHT_STYLE;\r\n          var polygonsHighlighted = [];\r\n\r\n          // fetch the geometry   (changed ST_Simplify value from 0.1)\r\n          var sql = new cartodb.SQL({ user: username, format: 'geojson' });\r\n          sql.execute(\"select cartodb_id, ST_Simplify(the_geom, 0.00001) as the_geom from (\" + layer.getSQL() + \") as _wrap\").done(function(geojson) {\r\n            var features = geojson.features;\r\n            for(var i = 0; i < features.length; ++i) {\r\n              var f = geojson.features[i];\r\n              var key = f.properties.cartodb_id\r\n\r\n              // generate geometry\r\n              var geo = L.GeoJSON.geometryToLayer(features[i].geometry);\r\n              geo.setStyle(style);\r\n\r\n              // add to polygons\r\n              polygons[key] = polygons[key] ||  [];\r\n              polygons[key].push(geo);\r\n            }\r\n          });\r\n\r\n          function featureOver(e, pos, latlng, data) {\r\n            featureOut();\r\n            var pol = polygons[data.cartodb_id] || [];\r\n            for(var i = 0; i < pol.length; ++i) {\r\n              map_object.addLayer(pol[i]);\r\n              polygonsHighlighted.push(pol[i]);\r\n            }\r\n          }\r\n\r\n          function featureOut() {\r\n            var pol = polygonsHighlighted;\r\n            for(var i = 0; i < pol.length; ++i) {\r\n              map_object.removeLayer(pol[i]);\r\n            }\r\n            polygonsHighlighted = [];\r\n          }\r\n\r\n          layer.on('featureOver', featureOver);\r\n          layer.on('featureOut', featureOut);\r\n          layer.setInteraction(true);\r\n\r\n        }\r\n\r\n// </ end of javisantana’s geometryhover block\r\n\r\n// ***********************************************************************\r\n// Leaflet BOUNDARY overlays using cartodb.createLayer and .addTo() method\r\n\r\nvar labels_overlay = L.tileLayer('http://{s}.basemaps.cartocdn.com/light_only_labels/{z}/{x}/{y}.png', {attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'});\r\n    var l_labels_overlay = new L.LayerGroup();\r\n    labels_overlay.addTo(l_labels_overlay).setZIndex(100);  // high Z - to keep on top of all other layers\r\n\r\nvar Stamen_TonerLabels = L.tileLayer('http://stamen-tiles-{s}.a.ssl.fastly.net/toner-labels/{z}/{x}/{y}.png', {\r\n  attribution: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n  subdomains: 'abcd',\r\n  minZoom: 0,\r\n  maxZoom: 20,\r\n  ext: 'png'\r\n});\r\n\r\nvar neighborhoods = cartodb.createLayer(map_object, {\r\n                    user_name: 'andrewmartini',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT * FROM neighborhoods\",\r\n                      cartocss: \"#layer { polygon-fill: #000000; polygon-opacity: 0; ::case {line-color: #FFFFFF; line-width: 3; line-opacity: 1;}  ::fill {line-color: #928d8d; line-width: 2; line-opacity: 1; }}\", \r\n                      interactivity: \"cartodb_id\" }]\r\n                    });\r\n    var l_neighborhoods = new L.LayerGroup();\r\n    neighborhoods.addTo(l_neighborhoods);\r\n\r\n var neigh_labels = cartodb.createLayer(map_object, {\r\n                    user_name: 'andrewmartini',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT * FROM neighborhoods\",\r\n                      cartocss: \"Map{buffer-size:512;} #layer::labels [zoom >=11]{ polygon-fill: #fff; polygon-opacity: 0; line-width: 0; line-opacity: 0;  text-name: [ntaname3];  text-face-name: 'Lato Bold';  text-size: 9;  text-fill: #333333;  text-opacity: 0.8;  text-halo-fill: #FFF;  text-halo-radius: 1.5;  text-transform: uppercase;  text-wrap-width: 50;  text-wrap-before: true; text-character-spacing: 1.1;  text-allow-overlap:false;  text-placement-type: simple;  text-placements: 'W,E,N,S,8,6';  text-label-position-tolerance:55;  text-min-distance:10; } #layer::labels [zoom >=13]{ polygon-fill: #fff; polygon-opacity: 0; line-width: 0; line-opacity: 0;  text-name: [ntaname3];  text-face-name: 'Lato Bold';  text-size: 12;  text-fill: #333333;  text-opacity: 0.8;  text-halo-fill: #FFF;  text-halo-radius: 1.5;  text-transform: uppercase;  text-wrap-width: 80;  text-wrap-before: true; text-character-spacing: 1.3;  text-allow-overlap:false;  text-placement-type: simple;  text-placements: 'W,E,N,S,11,10';  text-label-position-tolerance:5;  text-min-distance:10; }\",\r\n                      interactivity: \"cartodb_id\" }]\r\n                    });\r\n    var l_neigh_labels = new L.LayerGroup();\r\n    neigh_labels.addTo(l_neigh_labels);\r\n\r\n\r\nvar nycc = cartodb.createLayer(map_object, {\r\n                    user_name: 'andrewmartini',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT * FROM nycc\",\r\n                      cartocss: \"#layer{ polygon-fill: #000000; polygon-opacity: 0; ::case {line-color: #FFFFFF; line-width: 6; line-opacity: 1;}  ::fill {line-color: #FF2900; line-width: 4; line-opacity: 1; } } #nycc::labels [zoom >= 12]{   text-name: 'CC '+[coundist];   text-face-name: 'Lato Bold';   text-size: 16;   text-label-position-tolerance: 10;  text-character-spacing: 1.3; text-fill: #FF2900;   text-halo-fill: #FFF;   text-halo-radius: 1.5;   text-dy: 0;   text-allow-overlap: false;   text-placement: interior;   text-placement-type: simple;}\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                  });\r\n      var l_nycc = new L.LayerGroup();\r\n      nycc.addTo(l_nycc);  \r\n\r\nvar nycd = cartodb.createLayer(map_object, {\r\n                    user_name: 'andrewmartini',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT * FROM nycd_append\",\r\n                      cartocss: \"#layer { polygon-fill: #000000; polygon-opacity: 0; ::case {line-color: #FFFFFF; line-width: 6; line-opacity: 1;}  ::fill {line-color: #000000; line-width: 3; line-opacity: 1; }  } #nycd::labels [zoom >= 12]{   text-name: [b_name]+' '+[dist_num];   text-face-name: 'Lato Bold';   text-size: 14;   text-label-position-tolerance: 10;  text-character-spacing: 1.3; text-fill: #000;   text-halo-fill: #FFF;   text-halo-radius: 1.5;   text-dy: 10;   text-allow-overlap: false;   text-placement: interior;   text-placement-type: simple;}\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                  });\r\n      var l_nycd = new L.LayerGroup();\r\n      nycd.addTo(l_nycd); \r\n\r\n\r\nvar nyss = cartodb.createLayer(map_object, {\r\n                    user_name: 'andrewmartini',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT * FROM nyss WHERE stsendist is not null\",\r\n                      cartocss: \"#layer { polygon-fill: #000000; polygon-opacity: 0; ::case {line-color: #FFFFFF; line-width: 6; line-opacity: 1;}  ::fill {line-color: #800080; line-width: 3; line-opacity: 1; }  } #nyss::labels [zoom >= 12]{   text-name: 'SS '+[stsendist];   text-face-name: 'Lato Bold';   text-size: 16;   text-label-position-tolerance: 10;  text-character-spacing: 1.3; text-fill: #800080;   text-halo-fill: #FFF;   text-halo-radius: 1.5;   text-dy: 0;   text-allow-overlap: false;   text-placement: interior;   text-placement-type: simple;}\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                  });\r\n      var l_nyss = new L.LayerGroup();\r\n      nyss.addTo(l_nyss); \r\n\r\n\r\nvar nyad = cartodb.createLayer(map_object, {\r\n                    user_name: 'andrewmartini',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT * FROM nyad WHERE assemdist is not null\",\r\n                      cartocss: \"#layer { polygon-fill: #000; polygon-opacity: 0; ::case {line-color: #FFFFFF; line-width: 6; line-opacity: 1;}  ::fill {line-color: #191970; line-width: 3; line-opacity: 1; } } #nyad::labels [zoom >= 12]{   text-name: 'AD '+[assemdist];   text-face-name: 'Lato Bold';   text-size: 16;   text-label-position-tolerance: 10;  text-character-spacing: 1.3; text-fill: #191970;   text-halo-fill: #FFF;   text-halo-radius: 1.5;   text-dy: 0;   text-allow-overlap: false;   text-placement: interior;   text-placement-type: simple;}\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                  });\r\n      var l_nyad = new L.LayerGroup();\r\n      nyad.addTo(l_nyad); \r\n\r\nvar nycg = cartodb.createLayer(map_object, {\r\n                    user_name: 'andrewmartini',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT * FROM nycg WHERE congdist is not null\",\r\n                      cartocss: \"#layer { polygon-fill: #000; polygon-opacity: 0;  ::case {line-color: #FFFFFF; line-width: 6; line-opacity: 1;}  ::fill {line-color: #B22222; line-width: 3; line-opacity: 1; } } #nycg::labels [zoom >= 12]{   text-name: 'CG '+[congdist];   text-face-name: 'Lato Bold';   text-size: 16;   text-label-position-tolerance: 10;  text-character-spacing: 1.3; text-fill: #B22222;   text-halo-fill: #FFF;   text-halo-radius: 1.5;   text-dy: 10;   text-allow-overlap: false;   text-placement: interior;   text-placement-type: simple;}\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                  });\r\n      var l_nycg = new L.LayerGroup();\r\n      nycg.addTo(l_nycg); \r\n\r\nvar nybb = cartodb.createLayer(map_object, {\r\n                    user_name: 'andrewmartini',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                        sql: \"SELECT * FROM nybb\",\r\n                        cartocss: \"#layer { polygon-fill: #636363;  polygon-opacity: 0;  ::case {line-color: #FFFFFF; line-width: 5; line-opacity: 1;}  ::fill { line-color: #636363; line-width: 3; line-opacity: 1; } }\",\r\n                        interactivity: \"cartodb_id\"}]\r\n                        });\r\n      var l_nybb = new L.LayerGroup();\r\n      nybb.addTo(l_nybb); \r\n                          \r\n var zipcode = cartodb.createLayer(map_object, {\r\n                    user_name: 'andrewmartini',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                        sql: \"SELECT * FROM nyc_zipcode_2014_edit\",\r\n                        cartocss: \"#layer {   polygon-fill: #FFF;   polygon-opacity: 0;   ::case {line-color: #fff; line-width: 6; line-opacity: 1;}  ::fill { line-color: #636363; line-width: 2.5; line-opacity: 1; line-cap: round; line-dasharray: 4, 4; }}   #nyc_zipcode_2014_edit::labels [zoom >12]{   text-name: [postal];   text-face-name: 'Lato Bold';   text-size: 14;   text-label-position-tolerance: 10;   text-fill: #000;   text-halo-fill: #FFF;   text-halo-radius: 1;   text-dy: 0;   text-allow-overlap: false;   text-placement: interior;   text-placement-type: simple; } \",\r\n                        interactivity: \"cartodb_id\"}]\r\n                        });\r\n      var l_zipcode = new L.LayerGroup();\r\n      zipcode.addTo(l_zipcode);                            \r\n\r\nvar precincts = cartodb.createLayer(map_object, 'https://ashron24.cartodb.com/api/v2/viz/2fe813da-3d35-11e5-8497-0e0c41326911/viz.json');\r\n      var l_precincts = new L.LayerGroup();\r\n      precincts.addTo(l_precincts); \r\n\r\nvar uhf_health = cartodb.createLayer(map_object, {\r\n                    user_name: 'andrewmartini',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                        sql: \"SELECT * FROM chs_2009_dohmh_2010b\",\r\n                        cartocss: \"#layer  {   polygon-fill: #FFf;   polygon-opacity: 0;   ::case {line-color: #FFFFFF; line-width: 6; line-opacity: 1;}  ::fill {line-color: #000; line-width: 3; line-opacity: 1;  }}  #chs_2009_dohmh_2010b::labels [zoom > 12] {   text-name: 'UHF: '+ [first_uhf_];   text-face-name: 'Lato Regular';   text-size: 12;   text-label-position-tolerance: 0;   text-fill: #000;   text-halo-fill: #FFF;   text-halo-radius: 1;   text-dy: 0;   text-allow-overlap: true;   text-placement: interior;   text-placement-type: dummy; }\",\r\n                        interactivity: \"cartodb_id\"}]\r\n                      });\r\n      var l_uhf_health = new L.LayerGroup();\r\n      uhf_health.addTo(l_uhf_health)\r\n          .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), [ 'cartodb_id'])\r\n         });\r\n\r\n\r\n\r\n// **********************************************************************************\r\n//  Religious and CBO LAYERS\r\n\r\nvar cbo = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/68dd2cbe-5b14-11e5-8bb4-0ec6f7c8b2b9/viz.json');\r\n    var l_cbo = new L.LayerGroup();\r\n    cbo.addTo(l_cbo);\r\n\r\nvar schools = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/4d34b840-687c-11e5-b7d9-0e674067d321/viz.json');\r\n    var l_schools = new L.LayerGroup();\r\n    schools.addTo(l_schools);\r\n\r\nvar health = cartodb.createLayer(map_object, {  //hospitals and clinics\r\n                    user_name: 'ashron24',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT cartodb_id, the_geom_webmercator, name, label FROM scrieloc2_1 \",\r\n                      cartocss: \"#layer [label='Health'][zoom >= 10] {marker-width: 6; marker-file: url('https://s3.amazonaws.com/com.cartodb.users-assets.production/production/ashron24/assets/20150707191228Hospital_Sign_Silhouette_32.png'); marker-line-color: #FFFFFF; marker-placement: point; marker-type: ellipse;  marker-allow-overlap: true; }  #layer  [label='Health'] [zoom >= 11] { marker-width: 9; } #layer [label='Health'][zoom >= 12]{marker-width: 12; } #layer  [label='Health'] [zoom >= 13]{   marker-width: 18; } #layer  [label='Health'] [zoom >= 15]{ marker-width: 24; }\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                  });\r\n    var l_health = new L.LayerGroup();\r\n    health.addTo(l_health)\r\n          .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['name', 'cartodb_id'])\r\n         }); \r\n\r\nvar library = cartodb.createLayer(map_object, {  \r\n                    user_name: 'ashron24',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT cartodb_id, the_geom_webmercator, name, label FROM scrieloc2_1 \",\r\n                      cartocss: \"#layer [label='Library'][zoom >= 10] {marker-width: 6;marker-file: url(https://s3.amazonaws.com/com.cartodb.users-assets.production/production/ashron24/assets/20150707192220Open_book_32.png); marker-line-color: #FFFFFF; marker-placement: point; marker-type: ellipse;  marker-allow-overlap: true; }  #layer  [label='Library'] [zoom >= 11] { marker-width: 9; } #layer [label='Library'][zoom >= 12]{marker-width: 12; } #layer  [label='Library'] [zoom >= 13]{   marker-width: 18; } #layer  [label='Library'] [zoom >= 15]{ marker-width: 24; }\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                  });\r\n    var l_library = new L.LayerGroup();\r\n    library.addTo(l_library)\r\n          .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['name',  'cartodb_id'])\r\n         });\r\n\r\nvar fac = cartodb.createLayer(map_object, {  \r\n                    user_name: 'ashron24',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT cartodb_id, the_geom_webmercator, name, label FROM scrieloc2_1 \",\r\n                      cartocss: \"#layer [label='Fac'][zoom >= 10] {marker-width: 7; marker-file: url(https://s3.amazonaws.com/com.cartodb.users-assets.production/production/ashron24/assets/20150707192143Swimming_silhouette_32.png); marker-line-color: #FFFFFF; marker-placement: point; marker-type: ellipse;  marker-allow-overlap: true; }  #layer  [label='Fac'] [zoom >= 11] { marker-width: 10; } #layer [label='Fac'][zoom >= 12]{marker-width: 13; } #layer  [label='Fac'] [zoom >= 13]{   marker-width: 19; } #layer  [label='Fac'] [zoom >= 15]{ marker-width: 25; }\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                  });\r\n    var l_fac = new L.LayerGroup();\r\n    fac.addTo(l_fac)\r\n          .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), [ 'name', 'cartodb_id'])\r\n         });\r\n    \r\nvar christian = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/f58781ea-570a-11e5-b973-0e4fddd5de28/viz.json'); \r\n    var l_christian = new L.LayerGroup();\r\n    christian.addTo(l_christian);\r\n\r\nvar jewish = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/072e1512-5bf2-11e5-b4eb-0e853d047bba/viz.json');\r\n    var l_jewish = new L.LayerGroup();\r\n    jewish.addTo(l_jewish);\r\n\r\nvar muslim = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/6eab75fe-5bf2-11e5-b4eb-0e853d047bba/viz.json');\r\n    var l_muslim = new L.LayerGroup();\r\n    muslim.addTo(l_muslim);\r\n\r\nvar buddhist = cartodb.createLayer(map_object, { \r\n                    user_name: 'ashron24',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT cartodb_id, the_geom_webmercator, religion FROM haroldclergy3_11_15_merge\",\r\n                      cartocss: \"#layer [zoom >=10][religion='Buddhist'] { marker-file: url(https://s3.amazonaws.com/com.cartodb.users-assets.production/production/ashron24/assets/2015031119270050-px-orange-dharma_wheel_2.png);   marker-fill-opacity: 0.9;    marker-line-color: #FFF;    marker-line-width: 1;    marker-line-opacity: 1;    marker-placement: point;    marker-type: ellipse;    marker-width: 5;    marker-allow-overlap: true; }  #haroldclergy3_11_15_merge [zoom >= 11][religion='Buddhist'] {    marker-width: 8; } #haroldclergy3_11_15_merge [zoom >= 12][religion='Buddhist'] {    marker-width: 12; } #haroldclergy3_11_15_merge [zoom >= 13][religion='Buddhist'] {    marker-width: 18; } #haroldclergy3_11_15_merge [zoom >= 14][religion='Buddhist'] {    marker-width: 24; } #haroldclergy3_11_15_merge [zoom >= 15][religion='Buddhist'] {    marker-width: 30; } \",\r\n                      interactivity: \"cartodb_id\"}]\r\n                  });\r\n    var l_buddhist = new L.LayerGroup();\r\n    buddhist.addTo(l_buddhist);\r\n\r\nvar hindu = cartodb.createLayer(map_object, {  \r\n                    user_name: 'ashron24',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT cartodb_id, the_geom_webmercator, religion FROM haroldclergy3_11_15_merge\",\r\n                      cartocss: \"#layer [zoom >= 10][religion='Hindu'] { marker-file: url(https://s3.amazonaws.com/com.cartodb.users-assets.production/production/ashron24/assets/2015031119272950-pixel-Om.png);   marker-fill-opacity: 0.9;    marker-line-color: #FFF;    marker-line-width: 1;    marker-line-opacity: 1;    marker-placement: point;    marker-type: ellipse;    marker-width: 5;    marker-allow-overlap: true; }  #haroldclergy3_11_15_merge [zoom >= 11][religion='Hindu'] {    marker-width: 8; } #haroldclergy3_11_15_merge [zoom >= 12][religion='Hindu'] {    marker-width: 12; } #haroldclergy3_11_15_merge [zoom >= 13][religion='Hindu'] {    marker-width: 18; } #haroldclergy3_11_15_merge [zoom >= 14][religion='Hindu'] {    marker-width: 24; } #haroldclergy3_11_15_merge [zoom >= 15] [religion='Hindu'] {  marker-width: 30; } \",\r\n                      interactivity: \"cartodb_id\"}]\r\n                  });\r\n    var l_hindu = new L.LayerGroup();\r\n    hindu.addTo(l_hindu);\r\n\r\nvar sikh = cartodb.createLayer(map_object, { \r\n                    user_name: 'ashron24',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT cartodb_id, the_geom_webmercator, religion FROM haroldclergy3_11_15_merge\",\r\n                      cartocss: \"#layer [zoom >= 10][religion='Sikh'] { marker-file: url(https://s3.amazonaws.com/com.cartodb.users-assets.production/production/ashron24/assets/2015031119271550-px-yellow-Khanda.png);   marker-fill-opacity: 0.9;    marker-line-color: #FFF;    marker-line-width: 1;    marker-line-opacity: 1;    marker-placement: point;    marker-type: ellipse;    marker-width: 5;    marker-allow-overlap: true; }   #haroldclergy3_11_15_merge [zoom >= 11][religion='Sikh'] {    marker-width: 8; } #haroldclergy3_11_15_merge [zoom >= 12][religion='Sikh'] {    marker-width: 12; } #haroldclergy3_11_15_merge [zoom >= 13][religion='Sikh'] {    marker-width: 18; } #haroldclergy3_11_15_merge [zoom >= 14][religion='Sikh'] {    marker-width: 24; } #haroldclergy3_11_15_merge [zoom >= 15][religion='Sikh'] {    marker-width: 30; } \",\r\n                      interactivity: \"cartodb_id\"}]\r\n                  });\r\n    var l_sikh = new L.LayerGroup();\r\n    sikh.addTo(l_sikh);\r\n\r\nvar krishna = cartodb.createLayer(map_object, { \r\n                    user_name: 'ashron24',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT cartodb_id, the_geom_webmercator, religion FROM haroldclergy3_11_15_merge\",\r\n                      cartocss: \"#layer [zoom >= 10][religion='Hare Krishna'] { marker-file: url(https://s3.amazonaws.com/com.cartodb.users-assets.production/production/ashron24/assets/20150707172351lotus50px.png);   marker-fill-opacity: 0.9;    marker-line-color: #FFF;    marker-line-width: 1;    marker-line-opacity: 1;    marker-placement: point;    marker-type: ellipse;    marker-width: 5;    marker-allow-overlap: true; }  #haroldclergy3_11_15_merge  #haroldclergy3_11_15_merge [zoom >= 11][religion='Hare Krishna'] {    marker-width: 8; } #haroldclergy3_11_15_merge [zoom >= 12][religion='Hare Krishna'] {    marker-width: 12; } #haroldclergy3_11_15_merge [zoom >= 13][religion='Hare Krishna'] {    marker-width: 18; } #haroldclergy3_11_15_merge [zoom >= 14][religion='Hare Krishna'] {    marker-width: 24; } #haroldclergy3_11_15_merge [zoom >= 15][religion='Hare Krishna'] {    marker-width: 30; } \",\r\n                      interactivity: \"cartodb_id\"}]\r\n                  });\r\n    var l_krishna = new L.LayerGroup();\r\n    krishna.addTo(l_krishna);\r\n\r\nvar other_religion = cartodb.createLayer(map_object, { \r\n                    user_name: 'ashron24',\r\n                    type: 'cartodb',\r\n                    sublayers: [{\r\n                      sql: \"SELECT cartodb_id, the_geom_webmercator, religion FROM haroldclergy3_11_15_merge\",\r\n                      cartocss: \"#layer [zoom >= 10][religion=''] { marker-file: url(https://s3.amazonaws.com/com.cartodb.users-assets.production/production/ashron24/assets/2015031200010650-px-domed_building.png);   marker-fill-opacity: 0.9;    marker-line-color: #FFF;    marker-line-width: 5;    marker-line-opacity: 1;    marker-placement: point;    marker-type: ellipse;    marker-width: 1;    marker-allow-overlap: true; }  #haroldclergy3_11_15_merge [zoom >= 11][religion=''] {    marker-width: 8; } #haroldclergy3_11_15_merge [zoom >= 12][religion=''] {    marker-width: 12; } #haroldclergy3_11_15_merge [zoom >= 13][religion=''] {    marker-width: 18; } #haroldclergy3_11_15_merge [zoom >= 14][religion=''] {    marker-width: 24; } #haroldclergy3_11_15_merge [zoom >= 15][religion=''] {    marker-width: 30; } \",\r\n                      interactivity: \"cartodb_id\"}]\r\n                  });\r\n    var l_other_religion = new L.LayerGroup();\r\n    other_religion.addTo(l_other_religion);\r\n\r\nvar nycha = cartodb.createLayer(map_object, {\r\n            user_name: 'andrewmartini',\r\n            type: 'cartodb',\r\n            sublayers: [{\r\n               sql: 'SELECT * FROM nycha_developments_july2011',\r\n               cartocss: \"#layer{    polygon-fill: #0700ff;    polygon-opacity: 0.9;    line-color: #FFF;    line-width: 0;    line-opacity: 0;  }    #nycha_developments_july2011::labels [zoom >= 12] [tot_pop11 > 4000] {    text-name: [developmen];    text-face-name: 'Lato Bold';    text-size: 10;    text-label-position-tolerance: 10;    text-fill: #11002F;    text-halo-fill: #FFF;    text-halo-radius: 1;    text-dy: 0;    text-wrap-width: 120;    text-wrap-before: true;    text-character-spacing: 1.5;    text-allow-overlap: false;    text-placement: point;    text-placement-type: simple;    }    #nycha_developments_july2011::labels [zoom >= 13] [tot_pop11 > 1000] {    text-name: [developmen];    text-face-name: 'DejaVu Sans Book';    text-size: 10;    text-label-position-tolerance: 10;    text-fill: #000;    text-halo-fill: #FFF;    text-halo-radius: 1;    text-dy: 0;    text-wrap-width: 150;    text-wrap-before: true;    text-character-spacing: 2;    text-allow-overlap: false;    text-placement: point;    text-placement-type: simple;    }    #nycha_developments_july2011::labels [zoom >= 14] [tot_pop11 > 500] {    text-name: [developmen];    text-face-name: 'DejaVu Sans Book';    text-size: 11;    text-label-position-tolerance: 10;    text-fill: #000;    text-halo-fill: #FFF;    text-halo-radius: 1;    text-dy: 0;    text-wrap-width: 160;    text-wrap-before: true;    text-character-spacing: 2;    text-allow-overlap: false;    text-placement: point;    text-placement-type: simple;    }    #nycha_developments_july2011::labels [zoom >= 15] [tot_pop11 > 100] {    text-name: [developmen];    text-face-name: 'DejaVu Sans Book';    text-size: 12;    text-label-position-tolerance: 10;    text-fill: #000;    text-halo-fill: #FFF;    text-halo-radius: 1;    text-dy: 0;    text-wrap-width: 200;    text-wrap-before: true;    text-character-spacing: 2;    text-allow-overlap: false;    text-placement: point;    text-placement-type: simple;    }    #nycha_developments_july2011::labels [zoom >= 15] [tot_pop11 > 100] {    text-name: [developmen];    text-face-name: 'DejaVu Sans Book';    text-size: 12;    text-label-position-tolerance: 10;    text-fill: #000;    text-halo-fill: #FFF;    text-halo-radius: 1;      }    #nycha_developments_july2011::labels [zoom >= 16] {    text-name: [developmen];    text-face-name: 'DejaVu Sans Book';    text-size: 12;    text-label-position-tolerance: 10;    text-fill: #000;    text-halo-fill: #FFF;    text-halo-radius: 1;    text-dy: 0;    text-wrap-width: 200;    text-wrap-before: true;    text-character-spacing: 2;    text-allow-overlap: false;    text-placement: point;    text-placement-type: simple;    } \",\r\n               interactivity: 'cartodb_id'}]\r\n          });\r\n         var l_nycha = new L.LayerGroup();\r\n         nycha.addTo(l_nycha)\r\n           .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), [ 'developmen', 'tot_pop11', 'cartodb_id'])\r\n         }); \r\n\r\n  var subways = cartodb.createLayer(map_object, 'https://andrewmartini.cartodb.com/api/v2/viz/77a3e3a4-2aaf-11e5-8077-0e9d821ea90d/viz.json'); \r\n          var l_subways = new L.LayerGroup();\r\n          subways.addTo(l_subways);\r\n\r\n  var dpr_parks = cartodb.createLayer(map_object, 'https://andrewmartini.cartodb.com/api/v2/viz/14265a74-4129-11e5-a71a-0e4fddd5de28/viz.json'); \r\n          var l_dpr_parks = new L.LayerGroup();\r\n          dpr_parks.addTo(l_dpr_parks); \r\n\r\n//******************************************************\r\n//  CAU LAYERS\r\n\r\n  var cau_muslim = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/34963db0-5b0f-11e5-8fc5-0e0c41326911/viz.json');\r\n          var l_cau_muslim = new L.LayerGroup();\r\n          cau_muslim.addTo(l_cau_muslim);\r\n          \r\n  var rentreg = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/7d9bcc4e-573d-11e5-be93-0e9d821ea90d/viz.json'); \r\n          var l_rentreg = new L.LayerGroup();\r\n          rentreg.addTo(l_rentreg);\r\n\r\n  var nails = cartodb.createLayer(map_object, 'https://ashron24.cartodb.com/api/v2/viz/9cd21ef2-2bfe-11e5-9adf-0e4fddd5de28/viz.json'); \r\n          var l_nails = new L.LayerGroup();\r\n          nails.addTo(l_nails);\r\n\r\n  var vision_zero = cartodb.createLayer(map_object, 'https://ashron24.cartodb.com/api/v2/viz/5f2fe1a8-2f12-11e5-8b7e-0e0c41326911/viz.json'); \r\n          var l_vision_zero = new L.LayerGroup();\r\n          vision_zero.addTo(l_vision_zero);\r\n\r\n  var id_ny = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/acfe8376-573f-11e5-9d39-0e018d66dc29/viz.json'); \r\n          var l_id_ny = new L.LayerGroup();\r\n          id_ny.addTo(l_id_ny);\r\n\r\n  var rezoning = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/6812b31e-60a3-11e5-b0e0-0ec6f7c8b2b9/viz.json'); \r\n          var l_rezoning = new L.LayerGroup();\r\n          rezoning.addTo(l_rezoning);\r\n          \r\n  var scrie = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/5270fe74-5cb3-11e5-badb-0e4fddd5de28/viz.json'); \r\n          var l_scrie = new L.LayerGroup();\r\n          scrie.addTo(l_scrie);\r\n\r\n  var cau_events = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/4606c3b8-6202-11e5-ba89-0e853d047bba/viz.json'); \r\n          var l_cau_events = new L.LayerGroup();\r\n          cau_events.addTo(l_cau_events);\r\n\r\n  var paid_sick = cartodb.createLayer(map_object, 'https://ashron24.cartodb.com/api/v2/viz/b985e2b8-1911-11e5-bd0e-0e853d047bba/viz.json'); \r\n          var l_paid_sick = new L.LayerGroup();\r\n          paid_sick.addTo(l_paid_sick);\r\n\r\n  var mayoral_events = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/d579ebf0-6217-11e5-bbba-0e9d821ea90d/viz.json'); \r\n          var l_mayoral_events = new L.LayerGroup();\r\n          mayoral_events.addTo(l_mayoral_events);\r\n     \r\n  var cau_vols_by_zip = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/48b460c6-5b12-11e5-b6ba-0e8dde98a187/viz.json'); \r\n          var l_cau_vols_by_zip = new L.LayerGroup();\r\n          cau_vols_by_zip.addTo(l_cau_vols_by_zip);\r\n\r\n  var voters_by_ed = cartodb.createLayer(map_object, 'https://nycdoitt.cartodb.com/u/asherross/api/v2/viz/5f73b708-608f-11e5-b0e0-0ec6f7c8b2b9/viz.json'); \r\n          var l_voters_by_ed = new L.LayerGroup();\r\n          voters_by_ed.addTo(l_voters_by_ed);\r\n        \r\n  var wildlife_complaints = cartodb.createLayer(map_object, 'https://ashron2224.cartodb.com/api/v2/viz/4da60e72-3164-11e5-9c90-0e018d66dc29/viz.json'); \r\n          var l_wildlife_complaints = new L.LayerGroup();\r\n          wildlife_complaints.addTo(l_wildlife_complaints);\r\n          \r\n\r\n//******************************************************\r\n//  DEMOGRAPHICS & OTHER\r\n\r\nvar lang_plurality = cartodb.createLayer(map_object, {\r\n            user_name: 'andrewmartini',\r\n            type: 'cartodb',\r\n            sublayers: [{\r\n               sql: 'select * from schlang_merge_05_04',\r\n               cartocss:  \"#schlang_merge_05_04 {    polygon-opacity: 0.8;    line-color: #FFF;    line-width: 1;    line-opacity: 0.5; }  #schlang_merge_05_04[_plura_grp='French Creoles'] {    polygon-fill: #A53ED5; } #schlang_merge_05_04[_plura_grp='Indo-European: Balto-Slavic'] {    polygon-fill: #0000a0; } #schlang_merge_05_04[_plura_grp='Indo-European: Romance'] {    polygon-fill: #5CA2D1; } #schlang_merge_05_04[_plura_grp='Indo-European: Germanic'] {    polygon-fill: #cccccc; } #schlang_merge_05_04[_plura_grp='Indo-European: Other'] {    polygon-fill: #00ceff;   } #schlang_merge_05_04[_plura_grp='Uralic'] {    polygon-fill: #00ceff; }  #schlang_merge_05_04[_plura_grp='Sino-Tibetan: Chinese'] {    polygon-fill: #ff0000; } #schlang_merge_05_04[_plura_grp='South Asian'] {    polygon-fill: #ffa500; } #schlang_merge_05_04[_plura_grp='E & SE Asia: other'] {    polygon-fill: #fb9a99; } #schlang_merge_05_04[_plura_grp='Austronesian: Malayo-Polynesian'] {    polygon-fill: #fb9a99; }  #schlang_merge_05_04[_plura_grp='Afro-Asiatic: Semitic'] {    polygon-fill: #49db40; } #schlang_merge_05_04[_plura_grp='Niger-Congo: Atlantic-Congo'] {    polygon-fill: #136400; } #schlang_merge_05_04[_plura_grp='Niger-Congo: Mande'] {    polygon-fill: #229A00; }  #schlang_merge_05_04 {    polygon-fill: #DDDDDD; }     /** language labels for _plura */ #schlang_merge_05_04::labels [zoom >= 12] {   text-name: [_plura];   text-face-name: 'Lato Bold';   text-size: 10;   text-wrap-before: true;   text-wrap-width: 20;   text-label-position-tolerance: 10;   text-fill: #000;   text-halo-fill: #FFF;   text-halo-radius: 1;   text-dy: 0;   text-allow-overlap: false;   text-placement: point;   text-placement-type: simple; }  #schlang_merge_05_04::labels [zoom >= 13]  {   text-name: [_plura]+' '+[_plura_qt];   text-face-name: 'Lato Bold';   text-size: 11; }  #schlang_merge_05_04::labels [zoom >= 14] {   text-name: [_plura]+' '+[_plura_qt];   text-face-name: 'Lato Bold';   text-size: 13; }\",\r\n               interactivity: 'cartodb_id'}]\r\n          });\r\n         var l_lang_plurality = new L.LayerGroup();\r\n         lang_plurality.addTo(l_lang_plurality)\r\n          .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), [ 'cartodb_id'])\r\n         }); \r\n\r\n var plur_non_eng = cartodb.createLayer(map_object, {\r\n            user_name: 'andrewmartini',\r\n            type: 'cartodb',\r\n            sublayers: [{\r\n               sql: 'select * from schlang_merge_05_04',\r\n               cartocss: \"#layer {     polygon-opacity: 0.8;     line-color: #FFF;     line-width: 0.5;     line-opacity: 1;  }   #layer[_plurne_grp='French Creoles'] {     polygon-fill: #A53ED5;  }  #layer[_plurne_grp='Indo-European: Balto-Slavic']  {     polygon-fill: #0000a0;  }  #layer[_plurne_grp='Indo-European: Romance']  {     polygon-fill: #5CA2D1;  }  #layer[_plurne_grp='Indo-European: Germanic']  {     polygon-fill: #cccccc;  }  #layer[_plurne_grp='Indo-European: Other']  {      polygon-fill: #00ceff;    }  #layer[_plurne_grp='Uralic']  {     polygon-fill: #00ceff;  }   #layer[_plurne_grp='Sino-Tibetan: Chinese']  {     polygon-fill: #ff0000;  }  #layer[_plurne_grp='South Asian']  {     polygon-fill: #ffa500;  }  #layer[_plurne_grp='E & SE Asia: other'] {     polygon-fill: #fb9a99;  }  #layer[_plurne_grp='Austronesian: Malayo-Polynesian']  {     polygon-fill: #fb9a99;  }   #layer[_plurne_grp='Afro-Asiatic: Semitic']  {     polygon-fill: #49db40;  }  #layer[_plurne_grp='Niger-Congo: Atlantic-Congo'] {     polygon-fill: #136400;  }  #layer[_plurne_grp='Niger-Congo: Mande'] {     polygon-fill: #229A00;  }   #layer {     polygon-fill: #DDDDDD;  }      /** language labels for _plurne */  #layer::labels [zoom >= 12] {    text-name: [_plurne];    text-face-name: 'Lato Bold';    text-size: 10;    text-wrap-before: true;    text-wrap-width: 20;    text-label-position-tolerance: 10;    text-fill: #000;    text-halo-fill: #FFF;    text-halo-radius: 1;    text-dy: 0;    text-allow-overlap: false;    text-placement: point;    text-placement-type: simple;  }   #layer::labels [zoom >= 13] {    text-name: [_plurne]+' '+[_plurne_qty];    text-face-name: 'Lato Bold';    text-size: 11;  }   #layer::labels [zoom >= 14] {    text-name: [_plurne]+' '+[_plurne_qty];    text-face-name: 'Lato Bold';    text-size: 13;  }  #schlang_poly_v3_1::labels [_plurne_qty <= 9]{    text-name: [_plurne];    text-face-name: 'Lato Bold';    text-size: 0;    text-fill: #fff;    text-halo-radius: 0;  }  \",\r\n               interactivity: 'cartodb_id'}]\r\n          });\r\n         var l_plur_non_eng = new L.LayerGroup();\r\n         plur_non_eng.addTo(l_plur_non_eng)\r\n           .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), [ 'cartodb_id'])\r\n         });        \r\n\r\n  var nonengspan = cartodb.createLayer(map_object, {\r\n            user_name: 'andrewmartini',\r\n            type: 'cartodb',\r\n            sublayers: [{\r\n               sql: 'select * from schlang_merge_05_04',\r\n               cartocss: \"#layer {  polygon-opacity: 0.8;  line-color: #FFF;  line-width: 0.5;  line-opacity: 1;  }   /** language group polygon fill */  #schlang_merge_05_04[_plurnes_gr='Sino-Tibetan: Chinese'] {  polygon-fill: #ff0000;  }  #schlang_merge_05_04[_plurnes_gr='South Asian'] {  polygon-fill: #ffa500;  }  #schlang_merge_05_04[_plurnes_gr='E & SE Asia: other'] {  polygon-fill: #fb9a99;  }  #schlang_merge_05_04[_plurnes_gr='Austronesian: Malayo-Polynesian'] {  polygon-fill: #fb9a99;  } #schlang_merge_05_04[_plurnes_gr='Afro-Asiatic: Semitic'] {  polygon-fill: #49db40;  }  #schlang_merge_05_04[_plurnes_gr='Niger-Congo: Atlantic-Congo'] {  polygon-fill: #136400;  }  #schlang_merge_05_04[_plurnes_gr='Niger-Congo: Mande'] {  polygon-fill: #229A00;  }   #schlang_merge_05_04[_plurnes_gr='French Creoles'] {  polygon-fill: #A53ED5;  }  #schlang_merge_05_04[_plurnes_gr='Indo-European: Balto-Slavic'] {  polygon-fill: #0000a0;  }  #schlang_merge_05_04[_plurnes_gr='Indo-European: Romance'] {  polygon-fill: #5CA2D1;  }  #schlang_merge_05_04[_plurnes_gr='Indo-European: Germanic'] {  polygon-fill: #5CA2D1;  }  #schlang_merge_05_04[_plurnes_gr='Indo-European: Other'] {  polygon-fill: #00ceff;   }  #schlang_merge_05_04[_plurnes_gr='Uralic'] {  polygon-fill: #00ceff;  }   #schlang_merge_05_04 {  polygon-fill: #DDDDDD;  }   /** language labels for plurnes */  #schlang_merge_05_04::labels [zoom >= 12] { text-name: [_plurnes]; text-face-name: 'Lato Bold'; text-size: 10; text-wrap-before: true; text-wrap-width: 20;  text-transform: capitalize; text-label-position-tolerance: 10; text-fill: #000; text-halo-fill: #FFF; text-halo-radius: 1; text-dy: 0; text-allow-overlap: false; text-placement: point; text-placement-type: simple;  }   #schlang_merge_05_04::labels [zoom >= 13]      { text-name: [_plurnes]+' '+[_plurnes_qt]; text-face-name: 'Lato Bold'; text-size: 11;  }   #schlang_merge_05_04::labels [zoom >= 14]  { text-name: [_plurnes]+' '+[_plurnes_qt]; text-face-name: 'Lato Bold'; text-size: 13;  } #schlang_poly_v3_1::labels [_plurnes_qt < 9]{   text-name: [_plurnes_qt];   text-face-name: 'Lato Bold';   text-size: 0;   text-fill: #fff;   text-halo-radius: 0; }\",\r\n               interactivity: 'cartodb_id'}]\r\n          });\r\n         var l_nonengspan = new L.LayerGroup();\r\n         nonengspan.addTo(l_nonengspan)\r\n                   .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), [ 'cartodb_id'])\r\n         }); \r\n\r\n/* var none = cartodb.createLayer(map_object, {    // dummy placeholder for \"none\" value for exclusive groups to 'deselect'\r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT cartodb_id, the_geom_webmercator FROM nybb\",\r\n                        cartocss: \"#layer{   polygon-fill: #fff;   polygon-opacity: 0;   line-color: #FFF;   line-width: 0;   line-opacity: 0; }\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_none = new L.LayerGroup();\r\n    none.addTo(l_none); */\r\n\r\nvar percent_nhblack_choro = cartodb.createLayer(map_object, {   \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT cartodb_id, totalpop, nhblack, the_geom, the_geom_webmercator, (nhblack/totalpop)*100 as percent_black FROM tracttemp where totalpop > 100\",\r\n                        cartocss: \"#tracttemp{  polygon-fill: #fff;   polygon-opacity: 0;   line-color: #FFF;   line-width: 0;   line-opacity: 0; } #tracttemp [ percent_black >= 10] {    polygon-fill: #FFFFB2;    polygon-opacity: 0.8;   line-color: #FFF;   line-width: 0.1;   line-opacity: 1; } #tracttemp [ percent_black >= 20] {    polygon-fill: #FED976; } #tracttemp [ percent_black >= 35] {    polygon-fill: #FEB24C; } #tracttemp [ percent_black >= 50] {    polygon-fill: #FD8D3C; } #tracttemp [ percent_black >= 65] {    polygon-fill: #FC4E2A; } #tracttemp [ percent_black >= 80] {    polygon-fill: #E31A1C; } #tracttemp [ percent_black >= 90] {    polygon-fill: #B10026; }\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_percent_nhblack_choro = new L.LayerGroup();\r\n    percent_nhblack_choro.addTo(l_percent_nhblack_choro)\r\n        .on('done', function(layer) {\r\n        cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['percent_black', 'nhblack', 'totalpop', 'cartodb_id'])\r\n        });  \r\n\r\n\r\nvar percent_nhwhite_choro = cartodb.createLayer(map_object, {   \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT cartodb_id, totalpop, nhwhite, the_geom, the_geom_webmercator, (nhwhite/totalpop)*100 as percent_white FROM tracttemp where totalpop > 100\",\r\n                        cartocss: \"#tracttemp{  polygon-fill: #fff;   polygon-opacity: 0;   line-color: #FFF;   line-width: 0;   line-opacity: 0; } #tracttemp [ percent_white >= 10] {    polygon-fill: #FFFFB2;    polygon-opacity: 0.8;   line-color: #FFF;   line-width: 0.1;   line-opacity: 1; } #tracttemp [ percent_white >= 20] {    polygon-fill: #FED976; } #tracttemp [ percent_white >= 35] {    polygon-fill: #FEB24C; } #tracttemp [ percent_white >= 50] {    polygon-fill: #FD8D3C; } #tracttemp [ percent_white >= 65] {    polygon-fill: #FC4E2A; } #tracttemp [ percent_white >= 80] {    polygon-fill: #E31A1C; } #tracttemp [ percent_white >= 90] {    polygon-fill: #B10026; }\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_percent_nhwhite_choro = new L.LayerGroup();\r\n    percent_nhwhite_choro.addTo(l_percent_nhwhite_choro)\r\n          .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['percent_white', 'nhwhite', 'totalpop','cartodb_id'])\r\n         }); \r\n\r\nvar percent_foreignborn_choro = cartodb.createLayer(map_object, {   \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT totalpop, foreignbor, cartodb_id, the_geom, the_geom_webmercator, (foreignbor/totalpop)*100 AS percent_fb FROM tracttemp where totalpop > 100\",\r\n                        cartocss: \"#tracttemp{  polygon-fill: #fff;   polygon-opacity: 0;   line-color: #FFF;   line-width: 0;   line-opacity: 0; } #tracttemp [ percent_fb >= 10] {    polygon-fill: #FFFFB2;    polygon-opacity: 0.8;   line-color: #FFF;   line-width: 0.1;   line-opacity: 1; } #tracttemp [ percent_fb >= 20] {    polygon-fill: #FED976; } #tracttemp [ percent_fb >= 35] {    polygon-fill: #FEB24C; } #tracttemp [ percent_fb >= 50] {    polygon-fill: #FD8D3C; } #tracttemp [ percent_fb >= 65] {    polygon-fill: #FC4E2A; } #tracttemp [ percent_fb >= 80] {    polygon-fill: #E31A1C; } #tracttemp [ percent_fb >= 90] {    polygon-fill: #B10026; }\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_percent_foreignborn_choro = new L.LayerGroup();\r\n    percent_foreignborn_choro.addTo(l_percent_foreignborn_choro)\r\n          .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['percent_fb', 'foreignbor', 'totalpop', 'cartodb_id'])\r\n         }); \r\n\r\nvar percent_nhasian_choro = cartodb.createLayer(map_object, {   \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT totalpop, nhasian, cartodb_id, the_geom_webmercator, (nhasian/totalpop)*100 as percent_asian FROM tracttemp where totalpop > 100\",\r\n                        cartocss: \"#tracttemp{  polygon-fill: #fff;   polygon-opacity: 0;   line-color: #FFF;   line-width: 0;   line-opacity: 0; } #tracttemp [ percent_asian >= 10] {    polygon-fill: #FFFFB2;    polygon-opacity: 0.8;   line-color: #FFF;   line-width: 0.1;   line-opacity: 1; } #tracttemp [ percent_asian >= 20] {    polygon-fill: #FED976; } #tracttemp [ percent_asian >= 35] {    polygon-fill: #FEB24C; } #tracttemp [ percent_asian >= 50] {    polygon-fill: #FD8D3C; } #tracttemp [ percent_asian >= 65] {    polygon-fill: #FC4E2A; } #tracttemp [ percent_asian >= 80] {    polygon-fill: #E31A1C; } #tracttemp [ percent_asian >= 90] {    polygon-fill: #B10026; }\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_percent_nhasian_choro = new L.LayerGroup();\r\n    percent_nhasian_choro.addTo(l_percent_nhasian_choro)\r\n          .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['percent_asian', 'nhasian' ,'totalpop', 'cartodb_id'])\r\n         }); \r\n\r\nvar percent_hispanic_choro = cartodb.createLayer(map_object, {   \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT cartodb_id, hispanic, totalpop, the_geom_webmercator, (hispanic/totalpop)*100 AS percent_hispanic FROM tracttemp where totalpop > 100\",\r\n                        cartocss: \"#tracttemp{  polygon-fill: #fff;   polygon-opacity: 0;   line-color: #FFF;   line-width: 0;   line-opacity: 0; } #tracttemp [ percent_hispanic >= 10] {    polygon-fill: #FFFfb2;    polygon-opacity: 0.8;   line-color: #FFF;   line-width: 0.1;   line-opacity: 1; } #tracttemp [ percent_hispanic >= 20] {    polygon-fill: #FED976; } #tracttemp [ percent_hispanic >= 35] {    polygon-fill: #FEB24C; } #tracttemp [ percent_hispanic >= 50] {    polygon-fill: #FD8D3C; } #tracttemp [ percent_hispanic >= 65] {    polygon-fill: #FC4E2A; } #tracttemp [ percent_hispanic >= 80] {    polygon-fill: #E31A1C; } #tracttemp [ percent_hispanic >= 90] {    polygon-fill: #B10026; }\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_percent_hispanic_choro = new L.LayerGroup();\r\n    percent_hispanic_choro.addTo(l_percent_hispanic_choro)\r\n          .on('done', function(layer) {\r\n           cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['percent_hispanic','hispanic', 'totalpop', 'cartodb_id'])  \r\n        });\r\n\r\nvar median_inc_to_rent = cartodb.createLayer(map_object, {   \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT cartodb_id, medrenttoh, medianhhin, the_geom_webmercator FROM tracttemp WHERE Totalpop > 250\",\r\n                        cartocss: \"#tracttemp{polygon-fill: #0080ff;polygon-opacity: 0.8;line-color: #FFF;line-width: 0.5;line-opacity: 1;}#tracttemp [ medrenttoh <= 50] {polygon-fill: #ff4d4d;}#tracttemp [ medrenttoh <= 44.6] {polygon-fill: #ff7a7a;}#tracttemp [ medrenttoh <= 40.1] {polygon-fill: #ffa6a6;}#tracttemp [ medrenttoh <= 35.6] {polygon-fill: #fff2cc;}#tracttemp [ medrenttoh <= 31.1] {polygon-fill: #7fbfff;}#tracttemp [ medrenttoh <= 26.6] {polygon-fill: #40a0ff;}#tracttemp [ medrenttoh <= 22.1] {polygon-fill: #0080ff;}\",                      \r\n                        interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_median_inc_to_rent = new L.LayerGroup();\r\n    median_inc_to_rent.addTo(l_median_inc_to_rent)\r\n          .on('done', function(layer) {\r\n           cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['medrenttoh','medianhhin', 'cartodb_id'])  \r\n        });\r\n\r\nvar median_inc_choro = cartodb.createLayer(map_object, {   \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT cartodb_id, the_geom_webmercator, medianhhin FROM tracttemp WHERE Totalpop > 250\",\r\n                        cartocss: \"#tracttemp{   polygon-fill: #d73027;   polygon-opacity: 0.8;   line-color: #FFF;   line-width: 0.1;   line-opacity: 1; } #tracttemp [ medianhhin <= 243622] {    polygon-fill: #1a9850; } #tracttemp [ medianhhin <= 84240] {    polygon-fill: #8cce8a; } #tracttemp [ medianhhin <= 67394] {    polygon-fill: #d2ecb4; } #tracttemp [ medianhhin <= 57176] {    polygon-fill: #fff2cc; } #tracttemp [ medianhhin <= 48159] {    polygon-fill: #fed6b0; } #tracttemp [ medianhhin <= 39538] {    polygon-fill: #f79272; } #tracttemp [ medianhhin <= 30106] {    polygon-fill: #d73027; }\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_median_inc_choro  = new L.LayerGroup();\r\n    median_inc_choro.addTo(l_median_inc_choro)\r\n           .on('done', function(layer) {\r\n           cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['medianhhin', 'cartodb_id'])  \r\n        });\r\n\r\nvar bangladesh_gradu = cartodb.createLayer(map_object, {   \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT the_geom, the_geom_webmercator, cartodb_id, fbbanglade, bangladesh FROM tracttemp WHERE bangladesh > 5\",\r\n                        cartocss:  \"#layer{ marker-fill-opacity: 0.0; marker-line-color: #4b95c6; marker-line-width: 0; marker-line-opacity: 0; marker-placement: point; marker-multi-policy: largest; marker-type: ellipse; marker-fill: #5CA2D1; marker-allow-overlap: true; marker-clip: false; marker-comp-op: darken; } #layer [ bangladesh <= 1600] { marker-width: 23.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ bangladesh <= 400] { marker-width: 15.5; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ bangladesh <= 200] { marker-width: 11.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ bangladesh <= 50] { marker-width: 7.5; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ bangladesh < 10] { marker-width: 5.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ bangladesh <= 5] { marker-width: 0; marker-fill-opacity: 0.0; marker-line-width: 0; marker-line-opacity: 0; } #layer [ bangladesh <= 1600] [zoom >= 12] {marker-width: 34;} #layer [ bangladesh <= 400] [zoom >= 12] {marker-width: 23;} #layer [ bangladesh <= 200] [zoom >= 12] {marker-width: 17;} #layer [ bangladesh <= 50] [zoom >= 12] {marker-width: 11;} #layer [ bangladesh < 10] [zoom >= 12] {marker-width: 8;} #layer [ bangladesh <= 5] [zoom >= 12] {marker-width: 0;} #layer [ bangladesh <= 1600] [zoom >= 13] {marker-width: 52;} #layer [ bangladesh <= 400] [zoom >= 13] {marker-width: 35;} #layer [ bangladesh <= 200] [zoom >= 13] {marker-width: 25;} #layer [ bangladesh <= 50] [zoom >= 13] {marker-width: 17;} #layer [ bangladesh < 10] [zoom >= 13] {marker-width: 11;} #layer [ bangladesh <= 5] [zoom >= 13] {marker-width: 0.0;} #layer [ bangladesh <= 1600] [zoom >= 14] {marker-width: 78;} #layer [ bangladesh <= 400] [zoom >= 14] {marker-width: 52;} #layer [ bangladesh <= 200] [zoom >= 14] {marker-width: 37;} #layer [ bangladesh <= 50] [zoom >= 14] {marker-width: 25;} #layer [ bangladesh < 10] [zoom >= 14] {marker-width: 15;} #layer [ bangladesh <= 5] [zoom >= 14] {marker-width: 0.0;} #layer [ bangladesh <= 1600] [zoom >= 15] {marker-width: 116;} #layer [ bangladesh <= 400] [zoom >= 15] {marker-width: 78;} #layer [ bangladesh <= 200] [zoom >= 15] {marker-width: 56;} #layer [ bangladesh <= 50] [zoom >= 15] {marker-width: 38;} #layer [ bangladesh < 10] [zoom >= 15] {marker-width: 21;} #layer [ bangladesh <= 5] [zoom >= 15] {marker-width: 0.0;} #layer::labels [zoom >= 13] [bangladesh > 5] { /** label size for single-digit values */ text-name: [bangladesh]; text-face-name: 'Lato Bold'; text-size: 8; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000000; text-halo-radius: 0.1; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 13] [bangladesh >= 10] { text-name: [bangladesh]; text-size: 11; text-fill: #FFFFFF; } #layer::labels [zoom >= 13] [bangladesh >= 50] { text-name: [bangladesh]; text-size: 11; text-fill: #FFFFFF; text-halo-radius: 0.2; } #layer::labels [zoom >= 13] [bangladesh >= 400] { text-name: [bangladesh]; text-size: 15; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 14] [bangladesh > 5] { /** label size for single-digit values */ text-name: [bangladesh]; text-face-name: 'Lato Bold'; text-size: 10; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000000; text-halo-radius: 0.1; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 14] [bangladesh >= 10] { text-name: [bangladesh]; text-fill: #FFFFFF; text-size: 12; } #layer::labels [zoom >= 14] [bangladesh >= 50] { text-name: [bangladesh]; text-size: 12; text-fill: #FFFFFF; text-halo-radius: 0.2; } #layer::labels [zoom >= 14] [bangladesh >= 400] { text-name: [bangladesh]; text-size: 15; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 15] [bangladesh >= 10] { text-name: [bangladesh]; text-face-name: 'Lato Bold'; text-size: 15; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000; text-halo-radius: 0.4; text-dy: 0; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 15] [bangladesh >= 50] { text-name: [bangladesh]; text-size: 16; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 15] [bangladesh >= 400] {text-name: [bangladesh]; text-size: 18; text-fill: #FFFFFF; text-halo-radius: 0.4;}\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_bangladesh_gradu  = new L.LayerGroup();\r\n    bangladesh_gradu.addTo(l_bangladesh_gradu)\r\n          .on('done', function(layer) {\r\n           cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['bangladesh', 'fbbanglade', 'cartodb_id'])  \r\n        });\r\n\r\nvar pakistani_gradu = cartodb.createLayer(map_object, {   \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT the_geom, the_geom_webmercator, cartodb_id, fbpakistan, pakistani FROM tracttemp WHERE pakistani > 5\",\r\n                        cartocss:  \"#layer{ marker-fill-opacity: 0.0; marker-line-color: #966B6B; marker-line-width: 0; marker-line-opacity: 0; marker-placement: point; marker-multi-policy: largest; marker-type: ellipse; marker-fill: #966B6B; marker-allow-overlap: true; marker-clip: false; marker-comp-op: darken; } #layer [ pakistani <= 1600] { marker-width: 23.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ pakistani <= 400] { marker-width: 15.5; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ pakistani <= 200] { marker-width: 11.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ pakistani <= 50] { marker-width: 7.5; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ pakistani < 10] { marker-width: 5.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ pakistani <= 5] { marker-width: 0; marker-fill-opacity: 0.0; marker-line-width: 0; marker-line-opacity: 0; } #layer [ pakistani <= 1600] [zoom >= 12] {marker-width: 34;} #layer [ pakistani <= 400] [zoom >= 12] {marker-width: 23;} #layer [ pakistani <= 200] [zoom >= 12] {marker-width: 17;} #layer [ pakistani <= 50] [zoom >= 12] {marker-width: 11;} #layer [ pakistani < 10] [zoom >= 12] {marker-width: 8;} #layer [ pakistani <= 5] [zoom >= 12] {marker-width: 0;} #layer [ pakistani <= 1600] [zoom >= 13] {marker-width: 52;} #layer [ pakistani <= 400] [zoom >= 13] {marker-width: 35;} #layer [ pakistani <= 200] [zoom >= 13] {marker-width: 25;} #layer [ pakistani <= 50] [zoom >= 13] {marker-width: 17;} #layer [ pakistani < 10] [zoom >= 13] {marker-width: 11;} #layer [ pakistani <= 5] [zoom >= 13] {marker-width: 0.0;} #layer [ pakistani <= 1600] [zoom >= 14] {marker-width: 78;} #layer [ pakistani <= 400] [zoom >= 14] {marker-width: 52;} #layer [ pakistani <= 200] [zoom >= 14] {marker-width: 37;} #layer [ pakistani <= 50] [zoom >= 14] {marker-width: 25;} #layer [ pakistani < 10] [zoom >= 14] {marker-width: 15;} #layer [ pakistani <= 5] [zoom >= 14] {marker-width: 0.0;} #layer [ pakistani <= 1600] [zoom >= 15] {marker-width: 116;} #layer [ pakistani <= 400] [zoom >= 15] {marker-width: 78;} #layer [ pakistani <= 200] [zoom >= 15] {marker-width: 56;} #layer [ pakistani <= 50] [zoom >= 15] {marker-width: 38;} #layer [ pakistani < 10] [zoom >= 15] {marker-width: 21;} #layer [ pakistani <= 5] [zoom >= 15] {marker-width: 0.0;} #layer::labels [zoom >= 13] [pakistani > 5] { /** label size for single-digit values */ text-name: [pakistani]; text-face-name: 'Lato Bold'; text-size: 8; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000000; text-halo-radius: 0.1; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 13] [pakistani >= 10] { text-name: [pakistani]; text-size: 11; text-fill: #FFFFFF; } #layer::labels [zoom >= 13] [pakistani >= 50] { text-name: [pakistani]; text-size: 11; text-fill: #FFFFFF; text-halo-radius: 0.2; } #layer::labels [zoom >= 13] [pakistani >= 400] { text-name: [pakistani]; text-size: 15; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 14] [pakistani > 5] { /** label size for single-digit values */ text-name: [pakistani]; text-face-name: 'Lato Bold'; text-size: 10; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000000; text-halo-radius: 0.1; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 14] [pakistani >= 10] { text-name: [pakistani]; text-fill: #FFFFFF; text-size: 12; } #layer::labels [zoom >= 14] [pakistani >= 50] { text-name: [pakistani]; text-size: 12; text-fill: #FFFFFF; text-halo-radius: 0.2; } #layer::labels [zoom >= 14] [pakistani >= 400] { text-name: [pakistani]; text-size: 15; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 15] [pakistani >= 10] { text-name: [pakistani]; text-face-name: 'Lato Bold'; text-size: 15; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000; text-halo-radius: 0.4; text-dy: 0; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 15] [pakistani >= 50] { text-name: [pakistani]; text-size: 16; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 15] [pakistani >= 400] {text-name: [pakistani]; text-size: 18; text-fill: #FFFFFF; text-halo-radius: 0.4;}\",                      \r\n                      interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_pakistani_gradu  = new L.LayerGroup();\r\n    pakistani_gradu.addTo(l_pakistani_gradu)\r\n              .on('done', function(layer) {\r\n           cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['pakistani', 'fbpakistan', 'cartodb_id'])  \r\n        });\r\n\r\nvar asianindia_gradu = cartodb.createLayer(map_object, {   \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT the_geom, the_geom_webmercator, cartodb_id, asianindia FROM tracttemp WHERE asianindia > 5\",\r\n                        cartocss:  \"#layer{ marker-fill-opacity: 0.0; marker-line-color: #e25043; marker-line-width: 0; marker-line-opacity: 0; marker-placement: point; marker-multi-policy: largest; marker-type: ellipse; marker-fill: #F84F40; marker-allow-overlap: true; marker-clip: false; marker-comp-op: darken; } #layer [ asianindia <= 1600] { marker-width: 23.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ asianindia <= 400] { marker-width: 15.5; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ asianindia <= 200] { marker-width: 11.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ asianindia <= 50] { marker-width: 7.5; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ asianindia < 10] { marker-width: 5.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ asianindia <= 5] { marker-width: 0; marker-fill-opacity: 0.0; marker-line-width: 0; marker-line-opacity: 0; } #layer [ asianindia <= 1600] [zoom >= 12] {marker-width: 34;} #layer [ asianindia <= 400] [zoom >= 12] {marker-width: 23;} #layer [ asianindia <= 200] [zoom >= 12] {marker-width: 17;} #layer [ asianindia <= 50] [zoom >= 12] {marker-width: 11;} #layer [ asianindia < 10] [zoom >= 12] {marker-width: 8;} #layer [ asianindia <= 5] [zoom >= 12] {marker-width: 0;} #layer [ asianindia <= 1600] [zoom >= 13] {marker-width: 52;} #layer [ asianindia <= 400] [zoom >= 13] {marker-width: 35;} #layer [ asianindia <= 200] [zoom >= 13] {marker-width: 25;} #layer [ asianindia <= 50] [zoom >= 13] {marker-width: 17;} #layer [ asianindia < 10] [zoom >= 13] {marker-width: 11;} #layer [ asianindia <= 5] [zoom >= 13] {marker-width: 0.0;} #layer [ asianindia <= 1600] [zoom >= 14] {marker-width: 78;} #layer [ asianindia <= 400] [zoom >= 14] {marker-width: 52;} #layer [ asianindia <= 200] [zoom >= 14] {marker-width: 37;} #layer [ asianindia <= 50] [zoom >= 14] {marker-width: 25;} #layer [ asianindia < 10] [zoom >= 14] {marker-width: 15;} #layer [ asianindia <= 5] [zoom >= 14] {marker-width: 0.0;} #layer [ asianindia <= 1600] [zoom >= 15] {marker-width: 116;} #layer [ asianindia <= 400] [zoom >= 15] {marker-width: 78;} #layer [ asianindia <= 200] [zoom >= 15] {marker-width: 56;} #layer [ asianindia <= 50] [zoom >= 15] {marker-width: 38;} #layer [ asianindia < 10] [zoom >= 15] {marker-width: 21;} #layer [ asianindia <= 5] [zoom >= 15] {marker-width: 0.0;} #layer::labels [zoom >= 13] [asianindia > 5] { /** label size for single-digit values */ text-name: [asianindia]; text-face-name: 'Lato Bold'; text-size: 8; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000000; text-halo-radius: 0.1; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 13] [asianindia >= 10] { text-name: [asianindia]; text-size: 11; text-fill: #FFFFFF; } #layer::labels [zoom >= 13] [asianindia >= 50] { text-name: [asianindia]; text-size: 11; text-fill: #FFFFFF; text-halo-radius: 0.2; } #layer::labels [zoom >= 13] [asianindia >= 400] { text-name: [asianindia]; text-size: 15; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 14] [asianindia > 5] { /** label size for single-digit values */ text-name: [asianindia]; text-face-name: 'Lato Bold'; text-size: 10; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000000; text-halo-radius: 0.1; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 14] [asianindia >= 10] { text-name: [asianindia]; text-fill: #FFFFFF; text-size: 12; } #layer::labels [zoom >= 14] [asianindia >= 50] { text-name: [asianindia]; text-size: 12; text-fill: #FFFFFF; text-halo-radius: 0.2; } #layer::labels [zoom >= 14] [asianindia >= 400] { text-name: [asianindia]; text-size: 15; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 15] [asianindia >= 10] { text-name: [asianindia]; text-face-name: 'Lato Bold'; text-size: 15; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000; text-halo-radius: 0.4; text-dy: 0; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 15] [asianindia >= 50] { text-name: [asianindia]; text-size: 16; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 15] [asianindia >= 400] {text-name: [asianindia]; text-size: 18; text-fill: #FFFFFF; text-halo-radius: 0.4;}\",                      interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_asianindia_gradu  = new L.LayerGroup();\r\n    asianindia_gradu.addTo(l_asianindia_gradu)\r\n                  .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['asianindia', 'cartodb_id'])\r\n         }); \r\n\r\nvar arab_gradu = cartodb.createLayer(map_object, {   \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT the_geom, the_geom_webmercator, cartodb_id, arab FROM tracttemp WHERE arab > 5\",\r\n                        cartocss:  \"#layer{ marker-fill-opacity: 0.0; marker-line-color: #6fc98d; marker-line-width: 0; marker-line-opacity: 0; marker-placement: point; marker-multi-policy: largest; marker-type: ellipse; marker-fill: #6EBC88; marker-allow-overlap: true; marker-clip: false; marker-comp-op: darken; } #layer [ arab <= 1600] { marker-width: 23.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ arab <= 400] { marker-width: 15.5; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ arab <= 200] { marker-width: 11.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ arab <= 50] { marker-width: 7.5; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ arab < 10] { marker-width: 5.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ arab <= 5] { marker-width: 0; marker-fill-opacity: 0.0; marker-line-width: 0; marker-line-opacity: 0; } #layer [ arab <= 1600] [zoom >= 12] {marker-width: 34;} #layer [ arab <= 400] [zoom >= 12] {marker-width: 23;} #layer [ arab <= 200] [zoom >= 12] {marker-width: 17;} #layer [ arab <= 50] [zoom >= 12] {marker-width: 11;} #layer [ arab < 10] [zoom >= 12] {marker-width: 8;} #layer [ arab <= 5] [zoom >= 12] {marker-width: 0;} #layer [ arab <= 1600] [zoom >= 13] {marker-width: 52;} #layer [ arab <= 400] [zoom >= 13] {marker-width: 35;} #layer [ arab <= 200] [zoom >= 13] {marker-width: 25;} #layer [ arab <= 50] [zoom >= 13] {marker-width: 17;} #layer [ arab < 10] [zoom >= 13] {marker-width: 11;} #layer [ arab <= 5] [zoom >= 13] {marker-width: 0.0;} #layer [ arab <= 1600] [zoom >= 14] {marker-width: 78;} #layer [ arab <= 400] [zoom >= 14] {marker-width: 52;} #layer [ arab <= 200] [zoom >= 14] {marker-width: 37;} #layer [ arab <= 50] [zoom >= 14] {marker-width: 25;} #layer [ arab < 10] [zoom >= 14] {marker-width: 15;} #layer [ arab <= 5] [zoom >= 14] {marker-width: 0.0;} #layer [ arab <= 1600] [zoom >= 15] {marker-width: 116;} #layer [ arab <= 400] [zoom >= 15] {marker-width: 78;} #layer [ arab <= 200] [zoom >= 15] {marker-width: 56;} #layer [ arab <= 50] [zoom >= 15] {marker-width: 38;} #layer [ arab < 10] [zoom >= 15] {marker-width: 21;} #layer [ arab <= 5] [zoom >= 15] {marker-width: 0.0;} #layer::labels [zoom >= 13] [arab > 5] { /** label size for single-digit values */ text-name: [arab]; text-face-name: 'Lato Bold'; text-size: 8; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000000; text-halo-radius: 0.1; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 13] [arab >= 10] { text-name: [arab]; text-size: 11; text-fill: #FFFFFF; } #layer::labels [zoom >= 13] [arab >= 50] { text-name: [arab]; text-size: 11; text-fill: #FFFFFF; text-halo-radius: 0.2; } #layer::labels [zoom >= 13] [arab >= 400] { text-name: [arab]; text-size: 15; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 14] [arab > 5] { /** label size for single-digit values */ text-name: [arab]; text-face-name: 'Lato Bold'; text-size: 10; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000000; text-halo-radius: 0.1; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 14] [arab >= 10] { text-name: [arab]; text-fill: #FFFFFF; text-size: 12; } #layer::labels [zoom >= 14] [arab >= 50] { text-name: [arab]; text-size: 12; text-fill: #FFFFFF; text-halo-radius: 0.2; } #layer::labels [zoom >= 14] [arab >= 400] { text-name: [arab]; text-size: 15; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 15] [arab >= 10] { text-name: [arab]; text-face-name: 'Lato Bold'; text-size: 15; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000; text-halo-radius: 0.4; text-dy: 0; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 15] [arab >= 50] { text-name: [arab]; text-size: 16; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 15] [arab >= 400] {text-name: [arab]; text-size: 18; text-fill: #FFFFFF; text-halo-radius: 0.4;}\",                      \r\n                        interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_arab_gradu = new L.LayerGroup();\r\n    arab_gradu.addTo(l_arab_gradu)\r\n              .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['arab', 'cartodb_id'])\r\n         }); \r\n\r\nvar turkish_gradu = cartodb.createLayer(map_object, {   \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT the_geom, the_geom_webmercator, cartodb_id, turkish FROM tracttemp WHERE turkish > 5\",\r\n                        cartocss:  \"#layer{ marker-fill-opacity: 0.0; marker-line-color: #e0a8bf; marker-line-width: 0; marker-line-opacity: 0; marker-placement: point; marker-multi-policy: largest; marker-type: ellipse; marker-fill: #f4aee0; marker-allow-overlap: true; marker-clip: false; marker-comp-op: darken; } #layer [ turkish <= 1600] { marker-width: 23.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ turkish <= 400] { marker-width: 15.5; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ turkish <= 200] { marker-width: 11.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ turkish <= 50] { marker-width: 7.5; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ turkish < 10] { marker-width: 5.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ turkish <= 5] { marker-width: 0; marker-fill-opacity: 0.0; marker-line-width: 0; marker-line-opacity: 0; } #layer [ turkish <= 1600] [zoom >= 12] {marker-width: 34;} #layer [ turkish <= 400] [zoom >= 12] {marker-width: 23;} #layer [ turkish <= 200] [zoom >= 12] {marker-width: 17;} #layer [ turkish <= 50] [zoom >= 12] {marker-width: 11;} #layer [ turkish < 10] [zoom >= 12] {marker-width: 8;} #layer [ turkish <= 5] [zoom >= 12] {marker-width: 0;} #layer [ turkish <= 1600] [zoom >= 13] {marker-width: 52;} #layer [ turkish <= 400] [zoom >= 13] {marker-width: 35;} #layer [ turkish <= 200] [zoom >= 13] {marker-width: 25;} #layer [ turkish <= 50] [zoom >= 13] {marker-width: 17;} #layer [ turkish < 10] [zoom >= 13] {marker-width: 11;} #layer [ turkish <= 5] [zoom >= 13] {marker-width: 0.0;} #layer [ turkish <= 1600] [zoom >= 14] {marker-width: 78;} #layer [ turkish <= 400] [zoom >= 14] {marker-width: 52;} #layer [ turkish <= 200] [zoom >= 14] {marker-width: 37;} #layer [ turkish <= 50] [zoom >= 14] {marker-width: 25;} #layer [ turkish < 10] [zoom >= 14] {marker-width: 15;} #layer [ turkish <= 5] [zoom >= 14] {marker-width: 0.0;} #layer [ turkish <= 1600] [zoom >= 15] {marker-width: 116;} #layer [ turkish <= 400] [zoom >= 15] {marker-width: 78;} #layer [ turkish <= 200] [zoom >= 15] {marker-width: 56;} #layer [ turkish <= 50] [zoom >= 15] {marker-width: 38;} #layer [ turkish < 10] [zoom >= 15] {marker-width: 21;} #layer [ turkish <= 5] [zoom >= 15] {marker-width: 0.0;} #layer::labels [zoom >= 13] [turkish > 5] { /** label size for single-digit values */ text-name: [turkish]; text-face-name: 'Lato Bold'; text-size: 8; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000000; text-halo-radius: 0.1; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 13] [turkish >= 10] { text-name: [turkish]; text-size: 11; text-fill: #FFFFFF; } #layer::labels [zoom >= 13] [turkish >= 50] { text-name: [turkish]; text-size: 11; text-fill: #FFFFFF; text-halo-radius: 0.2; } #layer::labels [zoom >= 13] [turkish >= 400] { text-name: [turkish]; text-size: 15; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 14] [turkish > 5] { /** label size for single-digit values */ text-name: [turkish]; text-face-name: 'Lato Bold'; text-size: 10; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000000; text-halo-radius: 0.1; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 14] [turkish >= 10] { text-name: [turkish]; text-fill: #FFFFFF; text-size: 12; } #layer::labels [zoom >= 14] [turkish >= 50] { text-name: [turkish]; text-size: 12; text-fill: #FFFFFF; text-halo-radius: 0.2; } #layer::labels [zoom >= 14] [turkish >= 400] { text-name: [turkish]; text-size: 15; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 15] [turkish >= 10] { text-name: [turkish]; text-face-name: 'Lato Bold'; text-size: 15; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000; text-halo-radius: 0.4; text-dy: 0; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 15] [turkish >= 50] { text-name: [turkish]; text-size: 16; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 15] [turkish >= 400] {text-name: [turkish]; text-size: 18; text-fill: #FFFFFF; text-halo-radius: 0.4;}\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_turkish_gradu  = new L.LayerGroup();\r\n    turkish_gradu.addTo(l_turkish_gradu)\r\n         .on('done', function(layer) {\r\n         cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['turkish', 'cartodb_id'])\r\n         }); \r\n\r\nvar senegalese_gradu = cartodb.createLayer(map_object, {   \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT the_geom, the_geom_webmercator, cartodb_id, senegalese FROM tracttemp WHERE senegalese > 5\",\r\n                        cartocss:  \"#layer{ marker-fill-opacity: 0.0; marker-line-color: #0b5f72; marker-line-width: 0; marker-line-opacity: 0; marker-placement: point; marker-multi-policy: largest; marker-type: ellipse; marker-fill: #0d697f; marker-allow-overlap: true; marker-clip: false; marker-comp-op: darken; } #layer [ senegalese <= 1600] { marker-width: 23.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ senegalese <= 400] { marker-width: 15.5; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ senegalese <= 200] { marker-width: 11.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ senegalese <= 50] { marker-width: 7.5; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ senegalese < 10] { marker-width: 5.0; marker-fill-opacity: 0.8; marker-line-width: 1.5; marker-line-opacity: 1; } #layer [ senegalese <= 5] { marker-width: 0; marker-fill-opacity: 0.0; marker-line-width: 0; marker-line-opacity: 0; } #layer [ senegalese <= 1600] [zoom >= 12] {marker-width: 34;} #layer [ senegalese <= 400] [zoom >= 12] {marker-width: 23;} #layer [ senegalese <= 200] [zoom >= 12] {marker-width: 17;} #layer [ senegalese <= 50] [zoom >= 12] {marker-width: 11;} #layer [ senegalese < 10] [zoom >= 12] {marker-width: 8;} #layer [ senegalese <= 5] [zoom >= 12] {marker-width: 0;} #layer [ senegalese <= 1600] [zoom >= 13] {marker-width: 52;} #layer [ senegalese <= 400] [zoom >= 13] {marker-width: 35;} #layer [ senegalese <= 200] [zoom >= 13] {marker-width: 25;} #layer [ senegalese <= 50] [zoom >= 13] {marker-width: 17;} #layer [ senegalese < 10] [zoom >= 13] {marker-width: 11;} #layer [ senegalese <= 5] [zoom >= 13] {marker-width: 0.0;} #layer [ senegalese <= 1600] [zoom >= 14] {marker-width: 78;} #layer [ senegalese <= 400] [zoom >= 14] {marker-width: 52;} #layer [ senegalese <= 200] [zoom >= 14] {marker-width: 37;} #layer [ senegalese <= 50] [zoom >= 14] {marker-width: 25;} #layer [ senegalese < 10] [zoom >= 14] {marker-width: 15;} #layer [ senegalese <= 5] [zoom >= 14] {marker-width: 0.0;} #layer [ senegalese <= 1600] [zoom >= 15] {marker-width: 116;} #layer [ senegalese <= 400] [zoom >= 15] {marker-width: 78;} #layer [ senegalese <= 200] [zoom >= 15] {marker-width: 56;} #layer [ senegalese <= 50] [zoom >= 15] {marker-width: 38;} #layer [ senegalese < 10] [zoom >= 15] {marker-width: 21;} #layer [ senegalese <= 5] [zoom >= 15] {marker-width: 0.0;} #layer::labels [zoom >= 13] [senegalese > 5] { /** label size for single-digit values */ text-name: [senegalese]; text-face-name: 'Lato Bold'; text-size: 8; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000000; text-halo-radius: 0.1; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 13] [senegalese >= 10] { text-name: [senegalese]; text-size: 11; text-fill: #FFFFFF; } #layer::labels [zoom >= 13] [senegalese >= 50] { text-name: [senegalese]; text-size: 11; text-fill: #FFFFFF; text-halo-radius: 0.2; } #layer::labels [zoom >= 13] [senegalese >= 400] { text-name: [senegalese]; text-size: 15; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 14] [senegalese > 5] { /** label size for single-digit values */ text-name: [senegalese]; text-face-name: 'Lato Bold'; text-size: 10; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000000; text-halo-radius: 0.1; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 14] [senegalese >= 10] { text-name: [senegalese]; text-fill: #FFFFFF; text-size: 12; } #layer::labels [zoom >= 14] [senegalese >= 50] { text-name: [senegalese]; text-size: 12; text-fill: #FFFFFF; text-halo-radius: 0.2; } #layer::labels [zoom >= 14] [senegalese >= 400] { text-name: [senegalese]; text-size: 15; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 15] [senegalese >= 10] { text-name: [senegalese]; text-face-name: 'Lato Bold'; text-size: 15; text-wrap-before: true; text-wrap-width: 20; text-label-position-tolerance: 10; text-fill: #FFFFFF; text-halo-fill: #000; text-halo-radius: 0.4; text-dy: 0; text-allow-overlap: true; text-placement: point; text-placement-type: simple; } #layer::labels [zoom >= 15] [senegalese >= 50] { text-name: [senegalese]; text-size: 16; text-fill: #FFFFFF; text-halo-radius: 0.4; } #layer::labels [zoom >= 15] [senegalese >= 400] {text-name: [senegalese]; text-size: 18; text-fill: #FFFFFF; text-halo-radius: 0.4;}\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_senegalese_gradu  = new L.LayerGroup();\r\n    senegalese_gradu.addTo(l_senegalese_gradu)\r\n          .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['senegalese', 'cartodb_id'])\r\n         }); \r\n\r\n    \r\nvar dot_bike_2015 = cartodb.createLayer(map_object, { \r\n                      user_name: 'andrewmartini',\r\n                      type: 'cartodb',\r\n                      sublayers: [{\r\n                        sql: \"SELECT * FROM nyc_bike_routes_2015\",\r\n                        cartocss: \"#nyc_bike_routes_2015 { line-opacity: 0.7; } #nyc_bike_routes_2015 [facilitycl='I'] { line-color: #055D00; line-width: 4; } #nyc_bike_routes_2015[facilitycl='II'] { line-color: #055D00; line-width: 3; } #nyc_bike_routes_2015[facilitycl='III'] { line-color: #229A00; line-width: 3; line-dasharray: 6,3; } #nyc_bike_routes_2015{ line-color: #fdbf6f;  line-width: 2;}\",\r\n                      interactivity: \"cartodb_id\"}]\r\n                    });\r\n    var l_dot_bike_2015 = new L.LayerGroup();\r\n    dot_bike_2015.addTo(l_dot_bike_2015)\r\n          .on('done', function(layer) {\r\n          cdb.vis.Vis.addInfowindow(map_object, layer.getSubLayer(0), ['street', 'fromstreet', 'tostreet', 'tf_facilit', 'facilitycl', 'allclasses'])\r\n         });\r\n\r\n// initial layers    \r\nmap_object.addLayer(l_nybb);\r\nmap_object.addLayer(l_neigh_labels);\r\n\r\n    var baseMaps = [\r\n                      { \r\n                groupName : \"Basemaps\",\r\n                expanded : false,\r\n                layers    : {\r\n                  \"Gray\"      :  light_nolabels,\r\n                  \"Satellite\" :  Esri_WorldImagery,\r\n                  \"Streets\"   :  OpenStreetMap_Mapnik,\r\n                  \"Mapquest streets\" : MapQuestOpen_OSM,\r\n                  \"Relief\"   :  Stamen_TerrainBackground,\r\n                  \"Acetate terrain\" : Acetate_terrain,\r\n                  \"Black\": black_wallpaper\r\n                }\r\n                      }  \r\n    ];\r\n\r\n    var overlays = [ \r\n                {\r\n                groupName : \"Districts\",\r\n                expanded : false,\r\n                layers    : { \r\n                            \"Boroughs\": l_nybb,\r\n                            \"Neighborhoods\": l_neighborhoods,\r\n                            \"<span class='my-layer-item-steelblue'>Community Districts</span>\": l_nycd,\r\n                            \"<span class='my-layer-item-steelblue'>City Council</span>\": l_nycc,\r\n                            \"<span class='my-layer-item-steelblue'>NY State Senate</span>\": l_nyss,\r\n                            \"<span class='my-layer-item-steelblue'>NY State Assembly</span>\": l_nyad,\r\n                            \"<span class='my-layer-item-steelblue'>US Congressional</span>\": l_nycg,\r\n                            \"<span class='my-layer-item-steelblue'>Police Precincts</span>\": l_precincts,\r\n                            \"<span class='my-layer-item-steelblue'>Zip Codes</span>\": l_zipcode,\r\n                            \"<span class='my-layer-item-steelblue'>Health Zones</span>\": l_uhf_health\r\n                            }\r\n                },\r\n                {\r\n                groupName : \"Outreach Locations\",\r\n                expanded : true,\r\n                layers    : {                   \r\n                            \"<img src='css/images/protest.svg'  height='14px' width='14px'/> Community Based Orgs\": l_cbo,\r\n                            \"<img src='css/images/school.png'  height='14px' width='14px'/> Schools\": l_schools,\r\n                            \"<img src='css/images/Hospital_Sign_32.png'  height='14px' width='14px'/> Hospitals & Clinics\": l_health,\r\n                            \"<img src='css/images/Open_book_32.png'  height='14px' width='14px'/> Libraries\": l_library,\r\n                            \"<img src='css/images/Swimming_silhouette_32.png'  height='14px' width='14px'/> Senior & Rec Centers\": l_fac,\r\n                            \"NYCHA developments\": l_nycha,\r\n                            \"Subways\": l_subways,\r\n                            \"Bike Lanes\": l_dot_bike_2015,\r\n                            \"Parks\": l_dpr_parks \r\n                            }\r\n                },\r\n                /*{\r\n                groupName : \"Religious Groups\",\r\n                expanded : true,\r\n                layers    : {  \r\n                      \"<img src='css/images/red_cross-50px.png'  height='14px' width='14px'/> <span class='my-layer-item-red'>Christian Orgs</span>\": l_christian,\r\n                      \"<img src='css/images/Star_of_David-50-px.png'  height='14px' width='14px'/><span class='my-layer-item-blue'> Jewish Orgs</span>\": l_jewish,\r\n                      \"<img src='css/images/muslim_crescent-50px.png'  height='14px' width='14px'/><span class='my-layer-item-green'> Muslim Orgs</span>\": l_muslim,\r\n                      \"<img src='css/images/Om-50px.png'  height='14px' width='14px'/><span class='my-layer-item-salmon'> Hindu Orgs</span>\": l_hindu,\r\n                      \"<img src='css/images/dharma_wheel_2-50px.png'  height='14px' width='14px'/><span class='my-layer-item-orange'> Buddhist Orgs</span>\": l_buddhist,\r\n                      \"<img src='css/images/Khanda-50px.png'  height='14px' width='14px'/><span class='my-layer-item-yellow'> Sikh Orgs</span>\": l_sikh,\r\n                      \"<img src='css/images/lotus-50px.png'  height='14px' width='14px'/><span class='my-layer-item-purple'> Hare Krishna Orgs</span>\": l_krishna, \r\n                      \"<img src='css/images/domed_building-50px.png'  height='14px' width='14px'/> Other Religious Orgs\": l_other_religion\r\n                      }\r\n                },*/\r\n                {\r\n                groupName : \"Outreach Work\",\r\n                expanded : true,\r\n                layers    : {  \r\n                            \"Mayoral Events\" : l_mayoral_events,\r\n                            \"CAU Events by Neighborhood\": l_cau_events,\r\n                            \"CAU Volunteers by Zip\": l_cau_vols_by_zip,\r\n                            \"Wildlife Sightings\": l_wildlife_complaints,\r\n                            \"SCRIE Targets\": l_scrie,\r\n                            \"Rent Regulated Targets\": l_rentreg,\r\n                            \"IDNYC Target Turf\": l_id_ny,\r\n                            \"Rezoning Areas\": l_rezoning,\r\n                            \"Paid Sick Leave Business Walks\": l_paid_sick,\r\n                            \"Nail Salon Day of Action Targets\": l_nails,\r\n                            \"Vision Zero Borough Plans\": l_vision_zero/*,\r\n                            \"Voters by Election District\": l_voters_by_ed*/\r\n                            }\r\n      },\r\n      {\r\n                groupName : \"Demographics\",\r\n                expanded : true,\r\n                layers    : {  \r\n                           // \"None\": l_none,\r\n                            \"% Hispanic\": l_percent_hispanic_choro,\r\n                            \"% White\": l_percent_nhwhite_choro,\r\n                            \"% Black\": l_percent_nhblack_choro,       \r\n                            \"% Asian\": l_percent_nhasian_choro,\r\n                         //   }\r\n     // },                     \r\n     // {\r\n       //         groupName : \"Income\",\r\n         //       expanded : true,\r\n           //     layers    : {                              \r\n                            \"Median HH Income\": l_median_inc_choro,\r\n                            \"Median Inc to Rent\": l_median_inc_to_rent,\r\n                        //  }\r\n     // },\r\n     // {\r\n       //         groupName : \"Foreign Born\",\r\n         //       expanded : true,\r\n           //     layers    : {     \r\n                            \"% Foreign Born\": l_percent_foreignborn_choro,\r\n                            \"Bangladeshi\": l_bangladesh_gradu,\r\n                            \"Pakistani\": l_pakistani_gradu,\r\n                            \"Indian\": l_asianindia_gradu,\r\n                            \"Arab\": l_arab_gradu,\r\n                            \"Turkish\": l_turkish_gradu,\r\n                            \"Senegalese\": l_senegalese_gradu\r\n                              }      \r\n      },\r\n      /*{\r\n                groupName : \"DOE Language Data\",\r\n                expanded : false,\r\n                layers    : {  \r\n                          \"Plurality Language\": l_lang_plurality,\r\n                          \"Non-English Plurality\": l_plur_non_eng,\r\n                          \"Non-English/Spanish Plurality\": l_nonengspan,\r\n                          \"Muslim Languages\": l_cau_muslim\r\n                           }\r\n      },*/\r\n      {\r\n                groupName : \"Labels\",\r\n                expanded : false,\r\n                layers    : {\r\n                            \"Neighborhoods\"       : l_neigh_labels,\r\n                            \"Gray Basemap Labels\" : labels_overlay,\r\n                            \"Stamen Toner Labels\" : Stamen_TonerLabels\r\n                            }\r\n      }\r\n    ];\r\n\r\n    // Make the \"Demographics\" group exclusive (use radio inputs)\r\n   // var options = { exclusiveGroups: [\"Demographics\"], groupCheckboxes: false, collapsed: false, autoZIndex: false };\r\n\r\n    // Use the custom grouped layer control, not \"L.control.layers\"\r\n   // var layerControl = L.control.groupedLayers(baseLayers, groupedOverlays, options);\r\n   // map_object.addControl(layerControl);\r\n\r\n      var options = {\r\n       // container_width   : \"\",\r\n       // group_maxHeight     : \"\",\r\n       // container_maxHeight : \"\", \r\n        exclusive : false,  // true makes only one group able to be opened at a time! \r\n        collapsed: false,\r\n        autoZIndex: false\r\n        //exclusive: [\"Demographics\"],   want to have radio check boxes here - may need to steal 'exclusive' code or make a basemap type\r\n        //groupCheckboxes: true\r\n      };\r\n\r\n      var control = L.Control.styledLayerControl(baseMaps, overlays, options);\r\n        map_object.addControl(control);\r\n\r\n            }\r\n        </script>\r\n    </body>\r\n</html>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}